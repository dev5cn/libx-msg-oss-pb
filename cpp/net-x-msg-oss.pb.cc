// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-oss.proto

#include "net-x-msg-oss.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgOssUploadSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgOssUploadSimpleReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgOssUploadSimpleReq_ExtEntry_DoNotUse_default_instance_;
class XmsgOssUploadSimpleReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgOssUploadSimpleReq>
      _instance;
} _XmsgOssUploadSimpleReq_default_instance_;
class XmsgOssUploadSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgOssUploadSimpleRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgOssUploadSimpleRsp>
      _instance;
} _XmsgOssUploadSimpleRsp_default_instance_;
class XmsgOssDownloadSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse_default_instance_;
class XmsgOssDownloadSimpleReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgOssDownloadSimpleReq>
      _instance;
} _XmsgOssDownloadSimpleReq_default_instance_;
class XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgOssDownloadSimpleRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgOssDownloadSimpleRsp>
      _instance;
} _XmsgOssDownloadSimpleRsp_default_instance_;
class XmsgOssUsrObjInfoQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgOssUsrObjInfoQueryReq>
      _instance;
} _XmsgOssUsrObjInfoQueryReq_default_instance_;
class XmsgOssUsrObjInfoQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgOssUsrObjInfoQueryRsp>
      _instance;
} _XmsgOssUsrObjInfoQueryRsp_default_instance_;
class XmsgOssUsrObjInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgOssUsrObjInfo>
      _instance;
} _XmsgOssUsrObjInfo_default_instance_;
class XmsgClientTokenInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgClientTokenInfo>
      _instance;
} _XmsgClientTokenInfo_default_instance_;
namespace protobuf_net_2dx_2dmsg_2doss_2eproto {
void InitDefaultsXmsgOssUploadSimpleReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgOssUploadSimpleReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgOssUploadSimpleReq_ExtEntry_DoNotUse();
  }
  ::XmsgOssUploadSimpleReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgOssUploadSimpleReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgOssUploadSimpleReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgOssUploadSimpleReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUploadSimpleReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgOssUploadSimpleReq_default_instance_;
    new (ptr) ::XmsgOssUploadSimpleReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgOssUploadSimpleReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgOssUploadSimpleReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgOssUploadSimpleReqImpl);
}

void InitDefaultsXmsgOssUploadSimpleRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse();
  }
  ::XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgOssUploadSimpleRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgOssUploadSimpleRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgOssUploadSimpleRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUploadSimpleRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgOssUploadSimpleRsp_default_instance_;
    new (ptr) ::XmsgOssUploadSimpleRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgOssUploadSimpleRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgOssUploadSimpleRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgOssUploadSimpleRspImpl);
}

void InitDefaultsXmsgOssDownloadSimpleReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse();
  }
  ::XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgOssDownloadSimpleReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgOssDownloadSimpleReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgOssDownloadSimpleReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssDownloadSimpleReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgOssDownloadSimpleReq_default_instance_;
    new (ptr) ::XmsgOssDownloadSimpleReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgOssDownloadSimpleReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgOssDownloadSimpleReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgOssDownloadSimpleReqImpl);
}

void InitDefaultsXmsgOssDownloadSimpleRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse();
  }
  ::XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgOssDownloadSimpleRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgOssDownloadSimpleRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgOssDownloadSimpleRsp_default_instance_;
    new (ptr) ::XmsgOssDownloadSimpleRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgOssDownloadSimpleRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgOssDownloadSimpleRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgOssDownloadSimpleRspImpl);
}

void InitDefaultsXmsgOssUsrObjInfoQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgOssUsrObjInfoQueryReq_default_instance_;
    new (ptr) ::XmsgOssUsrObjInfoQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgOssUsrObjInfoQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgOssUsrObjInfoQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgOssUsrObjInfoQueryReqImpl);
}

void InitDefaultsXmsgOssUsrObjInfoQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUsrObjInfo();
  {
    void* ptr = &::_XmsgOssUsrObjInfoQueryRsp_default_instance_;
    new (ptr) ::XmsgOssUsrObjInfoQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgOssUsrObjInfoQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgOssUsrObjInfoQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgOssUsrObjInfoQueryRspImpl);
}

void InitDefaultsXmsgOssUsrObjInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgOssUsrObjInfo_default_instance_;
    new (ptr) ::XmsgOssUsrObjInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgOssUsrObjInfo::InitAsDefaultInstance();
}

void InitDefaultsXmsgOssUsrObjInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgOssUsrObjInfoImpl);
}

void InitDefaultsXmsgClientTokenInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgClientTokenInfo_default_instance_;
    new (ptr) ::XmsgClientTokenInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgClientTokenInfo::InitAsDefaultInstance();
}

void InitDefaultsXmsgClientTokenInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgClientTokenInfoImpl);
}

::google::protobuf::Metadata file_level_metadata[12];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleReq, objname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleReq, objsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleRsp, oid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleRsp, hashval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUploadSimpleRsp, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleReq, oid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleReq, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleReq, len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleRsp, objname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleRsp, objsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleRsp, hashval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleRsp, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssDownloadSimpleRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUsrObjInfoQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUsrObjInfoQueryReq, sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUsrObjInfoQueryReq, ets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUsrObjInfoQueryReq, page_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUsrObjInfoQueryReq, pagesize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUsrObjInfoQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUsrObjInfoQueryRsp, objinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUsrObjInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUsrObjInfo, oid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUsrObjInfo, objname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUsrObjInfo, objsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUsrObjInfo, hashval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssUsrObjInfo, gts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgClientTokenInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgClientTokenInfo, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgClientTokenInfo, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgClientTokenInfo, alg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgClientTokenInfo, slat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgClientTokenInfo, plat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgClientTokenInfo, did_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgClientTokenInfo, sign_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::XmsgOssUploadSimpleReq_ExtEntry_DoNotUse)},
  { 9, -1, sizeof(::XmsgOssUploadSimpleReq)},
  { 17, 24, sizeof(::XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse)},
  { 26, -1, sizeof(::XmsgOssUploadSimpleRsp)},
  { 34, 41, sizeof(::XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse)},
  { 43, -1, sizeof(::XmsgOssDownloadSimpleReq)},
  { 53, 60, sizeof(::XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse)},
  { 62, -1, sizeof(::XmsgOssDownloadSimpleRsp)},
  { 72, -1, sizeof(::XmsgOssUsrObjInfoQueryReq)},
  { 81, -1, sizeof(::XmsgOssUsrObjInfoQueryRsp)},
  { 87, -1, sizeof(::XmsgOssUsrObjInfo)},
  { 97, -1, sizeof(::XmsgClientTokenInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgOssUploadSimpleReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgOssUploadSimpleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgOssUploadSimpleRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgOssDownloadSimpleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgOssDownloadSimpleRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgOssUsrObjInfoQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgOssUsrObjInfoQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgOssUsrObjInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgClientTokenInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "net-x-msg-oss.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023net-x-msg-oss.proto\"\225\001\n\026XmsgOssUploadS"
      "impleReq\022\017\n\007objName\030\001 \001(\t\022\017\n\007objSize\030\002 \001"
      "(\004\022-\n\003ext\030\003 \003(\0132 .XmsgOssUploadSimpleReq"
      ".ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
      "lue\030\002 \001(\t:\0028\001\"\221\001\n\026XmsgOssUploadSimpleRsp"
      "\022\013\n\003oid\030\001 \001(\t\022\017\n\007hashVal\030\002 \001(\t\022-\n\003ext\030\003 "
      "\003(\0132 .XmsgOssUploadSimpleRsp.ExtEntry\032*\n"
      "\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
      "\001\"\256\001\n\030XmsgOssDownloadSimpleReq\022\013\n\003oid\030\001 "
      "\001(\t\022\013\n\003cgt\030\002 \001(\t\022\016\n\006offset\030\003 \001(\004\022\013\n\003len\030"
      "\004 \001(\004\022/\n\003ext\030\005 \003(\0132\".XmsgOssDownloadSimp"
      "leReq.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022"
      "\r\n\005value\030\002 \001(\t:\0028\001\"\267\001\n\030XmsgOssDownloadSi"
      "mpleRsp\022\017\n\007objName\030\001 \001(\t\022\017\n\007objSize\030\002 \001("
      "\004\022\017\n\007hashVal\030\003 \001(\t\022\013\n\003gts\030\004 \001(\004\022/\n\003ext\030\005"
      " \003(\0132\".XmsgOssDownloadSimpleRsp.ExtEntry"
      "\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
      ":\0028\001\"U\n\031XmsgOssUsrObjInfoQueryReq\022\013\n\003sts"
      "\030\001 \001(\004\022\013\n\003ets\030\002 \001(\004\022\014\n\004page\030\003 \001(\r\022\020\n\010pag"
      "eSize\030\004 \001(\r\"@\n\031XmsgOssUsrObjInfoQueryRsp"
      "\022#\n\007objInfo\030\001 \003(\0132\022.XmsgOssUsrObjInfo\"`\n"
      "\021XmsgOssUsrObjInfo\022\013\n\003oid\030\001 \001(\t\022\017\n\007objNa"
      "me\030\002 \001(\t\022\017\n\007objSize\030\003 \001(\004\022\017\n\007hashVal\030\004 \001"
      "(\t\022\013\n\003gts\030\005 \001(\004\"u\n\023XmsgClientTokenInfo\022\013"
      "\n\003cgt\030\001 \001(\t\022\r\n\005token\030\002 \001(\t\022\013\n\003alg\030\003 \001(\t\022"
      "\014\n\004slat\030\004 \001(\t\022\014\n\004plat\030\005 \001(\t\022\013\n\003did\030\006 \001(\t"
      "\022\014\n\004sign\030\007 \001(\tB\026\n\010x.msg.pbB\n XmsgOssPbb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1086);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net-x-msg-oss.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_net_2dx_2dmsg_2doss_2eproto

// ===================================================================

XmsgOssUploadSimpleReq_ExtEntry_DoNotUse::XmsgOssUploadSimpleReq_ExtEntry_DoNotUse() {}
XmsgOssUploadSimpleReq_ExtEntry_DoNotUse::XmsgOssUploadSimpleReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgOssUploadSimpleReq_ExtEntry_DoNotUse::MergeFrom(const XmsgOssUploadSimpleReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgOssUploadSimpleReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[0];
}
void XmsgOssUploadSimpleReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgOssUploadSimpleReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgOssUploadSimpleReq::kObjNameFieldNumber;
const int XmsgOssUploadSimpleReq::kObjSizeFieldNumber;
const int XmsgOssUploadSimpleReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgOssUploadSimpleReq::XmsgOssUploadSimpleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUploadSimpleReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgOssUploadSimpleReq)
}
XmsgOssUploadSimpleReq::XmsgOssUploadSimpleReq(const XmsgOssUploadSimpleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  objname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.objname().size() > 0) {
    objname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.objname_);
  }
  objsize_ = from.objsize_;
  // @@protoc_insertion_point(copy_constructor:XmsgOssUploadSimpleReq)
}

void XmsgOssUploadSimpleReq::SharedCtor() {
  objname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objsize_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgOssUploadSimpleReq::~XmsgOssUploadSimpleReq() {
  // @@protoc_insertion_point(destructor:XmsgOssUploadSimpleReq)
  SharedDtor();
}

void XmsgOssUploadSimpleReq::SharedDtor() {
  objname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgOssUploadSimpleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgOssUploadSimpleReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgOssUploadSimpleReq& XmsgOssUploadSimpleReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUploadSimpleReq();
  return *internal_default_instance();
}

XmsgOssUploadSimpleReq* XmsgOssUploadSimpleReq::New(::google::protobuf::Arena* arena) const {
  XmsgOssUploadSimpleReq* n = new XmsgOssUploadSimpleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgOssUploadSimpleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgOssUploadSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  objname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objsize_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgOssUploadSimpleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgOssUploadSimpleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string objName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_objname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->objname().data(), static_cast<int>(this->objname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssUploadSimpleReq.objName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 objSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          XmsgOssUploadSimpleReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgOssUploadSimpleReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssUploadSimpleReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssUploadSimpleReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgOssUploadSimpleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgOssUploadSimpleReq)
  return false;
#undef DO_
}

void XmsgOssUploadSimpleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgOssUploadSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string objName = 1;
  if (this->objname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->objname().data(), static_cast<int>(this->objname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssUploadSimpleReq.objName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->objname(), output);
  }

  // uint64 objSize = 2;
  if (this->objsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->objsize(), output);
  }

  // map<string, string> ext = 3;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssUploadSimpleReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssUploadSimpleReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgOssUploadSimpleReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgOssUploadSimpleReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgOssUploadSimpleReq)
}

::google::protobuf::uint8* XmsgOssUploadSimpleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgOssUploadSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string objName = 1;
  if (this->objname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->objname().data(), static_cast<int>(this->objname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssUploadSimpleReq.objName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->objname(), target);
  }

  // uint64 objSize = 2;
  if (this->objsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->objsize(), target);
  }

  // map<string, string> ext = 3;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssUploadSimpleReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssUploadSimpleReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgOssUploadSimpleReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgOssUploadSimpleReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgOssUploadSimpleReq)
  return target;
}

size_t XmsgOssUploadSimpleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgOssUploadSimpleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgOssUploadSimpleReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string objName = 1;
  if (this->objname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->objname());
  }

  // uint64 objSize = 2;
  if (this->objsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgOssUploadSimpleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgOssUploadSimpleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgOssUploadSimpleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgOssUploadSimpleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgOssUploadSimpleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgOssUploadSimpleReq)
    MergeFrom(*source);
  }
}

void XmsgOssUploadSimpleReq::MergeFrom(const XmsgOssUploadSimpleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgOssUploadSimpleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.objname().size() > 0) {

    objname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.objname_);
  }
  if (from.objsize() != 0) {
    set_objsize(from.objsize());
  }
}

void XmsgOssUploadSimpleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgOssUploadSimpleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgOssUploadSimpleReq::CopyFrom(const XmsgOssUploadSimpleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgOssUploadSimpleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgOssUploadSimpleReq::IsInitialized() const {
  return true;
}

void XmsgOssUploadSimpleReq::Swap(XmsgOssUploadSimpleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgOssUploadSimpleReq::InternalSwap(XmsgOssUploadSimpleReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  objname_.Swap(&other->objname_);
  swap(objsize_, other->objsize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgOssUploadSimpleReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse::XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse() {}
XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse::XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[2];
}
void XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgOssUploadSimpleRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgOssUploadSimpleRsp::kOidFieldNumber;
const int XmsgOssUploadSimpleRsp::kHashValFieldNumber;
const int XmsgOssUploadSimpleRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgOssUploadSimpleRsp::XmsgOssUploadSimpleRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUploadSimpleRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgOssUploadSimpleRsp)
}
XmsgOssUploadSimpleRsp::XmsgOssUploadSimpleRsp(const XmsgOssUploadSimpleRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oid().size() > 0) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  hashval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hashval().size() > 0) {
    hashval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashval_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgOssUploadSimpleRsp)
}

void XmsgOssUploadSimpleRsp::SharedCtor() {
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgOssUploadSimpleRsp::~XmsgOssUploadSimpleRsp() {
  // @@protoc_insertion_point(destructor:XmsgOssUploadSimpleRsp)
  SharedDtor();
}

void XmsgOssUploadSimpleRsp::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgOssUploadSimpleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgOssUploadSimpleRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgOssUploadSimpleRsp& XmsgOssUploadSimpleRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUploadSimpleRsp();
  return *internal_default_instance();
}

XmsgOssUploadSimpleRsp* XmsgOssUploadSimpleRsp::New(::google::protobuf::Arena* arena) const {
  XmsgOssUploadSimpleRsp* n = new XmsgOssUploadSimpleRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgOssUploadSimpleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgOssUploadSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgOssUploadSimpleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgOssUploadSimpleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string oid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssUploadSimpleRsp.oid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hashVal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashval()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hashval().data(), static_cast<int>(this->hashval().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssUploadSimpleRsp.hashVal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssUploadSimpleRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssUploadSimpleRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgOssUploadSimpleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgOssUploadSimpleRsp)
  return false;
#undef DO_
}

void XmsgOssUploadSimpleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgOssUploadSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssUploadSimpleRsp.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oid(), output);
  }

  // string hashVal = 2;
  if (this->hashval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashval().data(), static_cast<int>(this->hashval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssUploadSimpleRsp.hashVal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hashval(), output);
  }

  // map<string, string> ext = 3;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssUploadSimpleRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssUploadSimpleRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgOssUploadSimpleRsp)
}

::google::protobuf::uint8* XmsgOssUploadSimpleRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgOssUploadSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssUploadSimpleRsp.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oid(), target);
  }

  // string hashVal = 2;
  if (this->hashval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashval().data(), static_cast<int>(this->hashval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssUploadSimpleRsp.hashVal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hashval(), target);
  }

  // map<string, string> ext = 3;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssUploadSimpleRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssUploadSimpleRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgOssUploadSimpleRsp)
  return target;
}

size_t XmsgOssUploadSimpleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgOssUploadSimpleRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string oid = 1;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  // string hashVal = 2;
  if (this->hashval().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hashval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgOssUploadSimpleRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgOssUploadSimpleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgOssUploadSimpleRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgOssUploadSimpleRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgOssUploadSimpleRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgOssUploadSimpleRsp)
    MergeFrom(*source);
  }
}

void XmsgOssUploadSimpleRsp::MergeFrom(const XmsgOssUploadSimpleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgOssUploadSimpleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  if (from.hashval().size() > 0) {

    hashval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashval_);
  }
}

void XmsgOssUploadSimpleRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgOssUploadSimpleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgOssUploadSimpleRsp::CopyFrom(const XmsgOssUploadSimpleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgOssUploadSimpleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgOssUploadSimpleRsp::IsInitialized() const {
  return true;
}

void XmsgOssUploadSimpleRsp::Swap(XmsgOssUploadSimpleRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgOssUploadSimpleRsp::InternalSwap(XmsgOssUploadSimpleRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  oid_.Swap(&other->oid_);
  hashval_.Swap(&other->hashval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgOssUploadSimpleRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse::XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse() {}
XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse::XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse::MergeFrom(const XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[4];
}
void XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgOssDownloadSimpleReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgOssDownloadSimpleReq::kOidFieldNumber;
const int XmsgOssDownloadSimpleReq::kCgtFieldNumber;
const int XmsgOssDownloadSimpleReq::kOffsetFieldNumber;
const int XmsgOssDownloadSimpleReq::kLenFieldNumber;
const int XmsgOssDownloadSimpleReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgOssDownloadSimpleReq::XmsgOssDownloadSimpleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssDownloadSimpleReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgOssDownloadSimpleReq)
}
XmsgOssDownloadSimpleReq::XmsgOssDownloadSimpleReq(const XmsgOssDownloadSimpleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oid().size() > 0) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&len_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  // @@protoc_insertion_point(copy_constructor:XmsgOssDownloadSimpleReq)
}

void XmsgOssDownloadSimpleReq::SharedCtor() {
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  _cached_size_ = 0;
}

XmsgOssDownloadSimpleReq::~XmsgOssDownloadSimpleReq() {
  // @@protoc_insertion_point(destructor:XmsgOssDownloadSimpleReq)
  SharedDtor();
}

void XmsgOssDownloadSimpleReq::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgOssDownloadSimpleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgOssDownloadSimpleReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgOssDownloadSimpleReq& XmsgOssDownloadSimpleReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssDownloadSimpleReq();
  return *internal_default_instance();
}

XmsgOssDownloadSimpleReq* XmsgOssDownloadSimpleReq::New(::google::protobuf::Arena* arena) const {
  XmsgOssDownloadSimpleReq* n = new XmsgOssDownloadSimpleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgOssDownloadSimpleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgOssDownloadSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  _internal_metadata_.Clear();
}

bool XmsgOssDownloadSimpleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgOssDownloadSimpleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string oid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssDownloadSimpleReq.oid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssDownloadSimpleReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 len = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssDownloadSimpleReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssDownloadSimpleReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgOssDownloadSimpleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgOssDownloadSimpleReq)
  return false;
#undef DO_
}

void XmsgOssDownloadSimpleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgOssDownloadSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssDownloadSimpleReq.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oid(), output);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssDownloadSimpleReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cgt(), output);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  // uint64 len = 4;
  if (this->len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->len(), output);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssDownloadSimpleReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssDownloadSimpleReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgOssDownloadSimpleReq)
}

::google::protobuf::uint8* XmsgOssDownloadSimpleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgOssDownloadSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssDownloadSimpleReq.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oid(), target);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssDownloadSimpleReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cgt(), target);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  // uint64 len = 4;
  if (this->len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->len(), target);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssDownloadSimpleReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssDownloadSimpleReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgOssDownloadSimpleReq)
  return target;
}

size_t XmsgOssDownloadSimpleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgOssDownloadSimpleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string oid = 1;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  // uint64 len = 4;
  if (this->len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->len());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgOssDownloadSimpleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgOssDownloadSimpleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgOssDownloadSimpleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgOssDownloadSimpleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgOssDownloadSimpleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgOssDownloadSimpleReq)
    MergeFrom(*source);
  }
}

void XmsgOssDownloadSimpleReq::MergeFrom(const XmsgOssDownloadSimpleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgOssDownloadSimpleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.len() != 0) {
    set_len(from.len());
  }
}

void XmsgOssDownloadSimpleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgOssDownloadSimpleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgOssDownloadSimpleReq::CopyFrom(const XmsgOssDownloadSimpleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgOssDownloadSimpleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgOssDownloadSimpleReq::IsInitialized() const {
  return true;
}

void XmsgOssDownloadSimpleReq::Swap(XmsgOssDownloadSimpleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgOssDownloadSimpleReq::InternalSwap(XmsgOssDownloadSimpleReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  oid_.Swap(&other->oid_);
  cgt_.Swap(&other->cgt_);
  swap(offset_, other->offset_);
  swap(len_, other->len_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgOssDownloadSimpleReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse::XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse() {}
XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse::XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[6];
}
void XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgOssDownloadSimpleRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgOssDownloadSimpleRsp::kObjNameFieldNumber;
const int XmsgOssDownloadSimpleRsp::kObjSizeFieldNumber;
const int XmsgOssDownloadSimpleRsp::kHashValFieldNumber;
const int XmsgOssDownloadSimpleRsp::kGtsFieldNumber;
const int XmsgOssDownloadSimpleRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgOssDownloadSimpleRsp::XmsgOssDownloadSimpleRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssDownloadSimpleRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgOssDownloadSimpleRsp)
}
XmsgOssDownloadSimpleRsp::XmsgOssDownloadSimpleRsp(const XmsgOssDownloadSimpleRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  objname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.objname().size() > 0) {
    objname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.objname_);
  }
  hashval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hashval().size() > 0) {
    hashval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashval_);
  }
  ::memcpy(&objsize_, &from.objsize_,
    static_cast<size_t>(reinterpret_cast<char*>(&gts_) -
    reinterpret_cast<char*>(&objsize_)) + sizeof(gts_));
  // @@protoc_insertion_point(copy_constructor:XmsgOssDownloadSimpleRsp)
}

void XmsgOssDownloadSimpleRsp::SharedCtor() {
  objname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&objsize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&objsize_)) + sizeof(gts_));
  _cached_size_ = 0;
}

XmsgOssDownloadSimpleRsp::~XmsgOssDownloadSimpleRsp() {
  // @@protoc_insertion_point(destructor:XmsgOssDownloadSimpleRsp)
  SharedDtor();
}

void XmsgOssDownloadSimpleRsp::SharedDtor() {
  objname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgOssDownloadSimpleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgOssDownloadSimpleRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgOssDownloadSimpleRsp& XmsgOssDownloadSimpleRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssDownloadSimpleRsp();
  return *internal_default_instance();
}

XmsgOssDownloadSimpleRsp* XmsgOssDownloadSimpleRsp::New(::google::protobuf::Arena* arena) const {
  XmsgOssDownloadSimpleRsp* n = new XmsgOssDownloadSimpleRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgOssDownloadSimpleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgOssDownloadSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  objname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&objsize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&objsize_)) + sizeof(gts_));
  _internal_metadata_.Clear();
}

bool XmsgOssDownloadSimpleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgOssDownloadSimpleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string objName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_objname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->objname().data(), static_cast<int>(this->objname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssDownloadSimpleRsp.objName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 objSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hashVal = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashval()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hashval().data(), static_cast<int>(this->hashval().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssDownloadSimpleRsp.hashVal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssDownloadSimpleRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssDownloadSimpleRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgOssDownloadSimpleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgOssDownloadSimpleRsp)
  return false;
#undef DO_
}

void XmsgOssDownloadSimpleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgOssDownloadSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string objName = 1;
  if (this->objname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->objname().data(), static_cast<int>(this->objname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssDownloadSimpleRsp.objName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->objname(), output);
  }

  // uint64 objSize = 2;
  if (this->objsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->objsize(), output);
  }

  // string hashVal = 3;
  if (this->hashval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashval().data(), static_cast<int>(this->hashval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssDownloadSimpleRsp.hashVal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->hashval(), output);
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gts(), output);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssDownloadSimpleRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssDownloadSimpleRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgOssDownloadSimpleRsp)
}

::google::protobuf::uint8* XmsgOssDownloadSimpleRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgOssDownloadSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string objName = 1;
  if (this->objname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->objname().data(), static_cast<int>(this->objname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssDownloadSimpleRsp.objName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->objname(), target);
  }

  // uint64 objSize = 2;
  if (this->objsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->objsize(), target);
  }

  // string hashVal = 3;
  if (this->hashval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashval().data(), static_cast<int>(this->hashval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssDownloadSimpleRsp.hashVal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->hashval(), target);
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gts(), target);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssDownloadSimpleRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssDownloadSimpleRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgOssDownloadSimpleRsp)
  return target;
}

size_t XmsgOssDownloadSimpleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgOssDownloadSimpleRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string objName = 1;
  if (this->objname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->objname());
  }

  // string hashVal = 3;
  if (this->hashval().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hashval());
  }

  // uint64 objSize = 2;
  if (this->objsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objsize());
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgOssDownloadSimpleRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgOssDownloadSimpleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgOssDownloadSimpleRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgOssDownloadSimpleRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgOssDownloadSimpleRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgOssDownloadSimpleRsp)
    MergeFrom(*source);
  }
}

void XmsgOssDownloadSimpleRsp::MergeFrom(const XmsgOssDownloadSimpleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgOssDownloadSimpleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.objname().size() > 0) {

    objname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.objname_);
  }
  if (from.hashval().size() > 0) {

    hashval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashval_);
  }
  if (from.objsize() != 0) {
    set_objsize(from.objsize());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
}

void XmsgOssDownloadSimpleRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgOssDownloadSimpleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgOssDownloadSimpleRsp::CopyFrom(const XmsgOssDownloadSimpleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgOssDownloadSimpleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgOssDownloadSimpleRsp::IsInitialized() const {
  return true;
}

void XmsgOssDownloadSimpleRsp::Swap(XmsgOssDownloadSimpleRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgOssDownloadSimpleRsp::InternalSwap(XmsgOssDownloadSimpleRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  objname_.Swap(&other->objname_);
  hashval_.Swap(&other->hashval_);
  swap(objsize_, other->objsize_);
  swap(gts_, other->gts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgOssDownloadSimpleRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgOssUsrObjInfoQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgOssUsrObjInfoQueryReq::kStsFieldNumber;
const int XmsgOssUsrObjInfoQueryReq::kEtsFieldNumber;
const int XmsgOssUsrObjInfoQueryReq::kPageFieldNumber;
const int XmsgOssUsrObjInfoQueryReq::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgOssUsrObjInfoQueryReq::XmsgOssUsrObjInfoQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUsrObjInfoQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgOssUsrObjInfoQueryReq)
}
XmsgOssUsrObjInfoQueryReq::XmsgOssUsrObjInfoQueryReq(const XmsgOssUsrObjInfoQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sts_, &from.sts_,
    static_cast<size_t>(reinterpret_cast<char*>(&pagesize_) -
    reinterpret_cast<char*>(&sts_)) + sizeof(pagesize_));
  // @@protoc_insertion_point(copy_constructor:XmsgOssUsrObjInfoQueryReq)
}

void XmsgOssUsrObjInfoQueryReq::SharedCtor() {
  ::memset(&sts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagesize_) -
      reinterpret_cast<char*>(&sts_)) + sizeof(pagesize_));
  _cached_size_ = 0;
}

XmsgOssUsrObjInfoQueryReq::~XmsgOssUsrObjInfoQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgOssUsrObjInfoQueryReq)
  SharedDtor();
}

void XmsgOssUsrObjInfoQueryReq::SharedDtor() {
}

void XmsgOssUsrObjInfoQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgOssUsrObjInfoQueryReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgOssUsrObjInfoQueryReq& XmsgOssUsrObjInfoQueryReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUsrObjInfoQueryReq();
  return *internal_default_instance();
}

XmsgOssUsrObjInfoQueryReq* XmsgOssUsrObjInfoQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgOssUsrObjInfoQueryReq* n = new XmsgOssUsrObjInfoQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgOssUsrObjInfoQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgOssUsrObjInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagesize_) -
      reinterpret_cast<char*>(&sts_)) + sizeof(pagesize_));
  _internal_metadata_.Clear();
}

bool XmsgOssUsrObjInfoQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgOssUsrObjInfoQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 sts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ets = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 page = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pageSize = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pagesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgOssUsrObjInfoQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgOssUsrObjInfoQueryReq)
  return false;
#undef DO_
}

void XmsgOssUsrObjInfoQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgOssUsrObjInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sts = 1;
  if (this->sts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sts(), output);
  }

  // uint64 ets = 2;
  if (this->ets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ets(), output);
  }

  // uint32 page = 3;
  if (this->page() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->page(), output);
  }

  // uint32 pageSize = 4;
  if (this->pagesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pagesize(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgOssUsrObjInfoQueryReq)
}

::google::protobuf::uint8* XmsgOssUsrObjInfoQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgOssUsrObjInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sts = 1;
  if (this->sts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sts(), target);
  }

  // uint64 ets = 2;
  if (this->ets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ets(), target);
  }

  // uint32 page = 3;
  if (this->page() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->page(), target);
  }

  // uint32 pageSize = 4;
  if (this->pagesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pagesize(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgOssUsrObjInfoQueryReq)
  return target;
}

size_t XmsgOssUsrObjInfoQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgOssUsrObjInfoQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 sts = 1;
  if (this->sts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sts());
  }

  // uint64 ets = 2;
  if (this->ets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ets());
  }

  // uint32 page = 3;
  if (this->page() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page());
  }

  // uint32 pageSize = 4;
  if (this->pagesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pagesize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgOssUsrObjInfoQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgOssUsrObjInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgOssUsrObjInfoQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgOssUsrObjInfoQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgOssUsrObjInfoQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgOssUsrObjInfoQueryReq)
    MergeFrom(*source);
  }
}

void XmsgOssUsrObjInfoQueryReq::MergeFrom(const XmsgOssUsrObjInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgOssUsrObjInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sts() != 0) {
    set_sts(from.sts());
  }
  if (from.ets() != 0) {
    set_ets(from.ets());
  }
  if (from.page() != 0) {
    set_page(from.page());
  }
  if (from.pagesize() != 0) {
    set_pagesize(from.pagesize());
  }
}

void XmsgOssUsrObjInfoQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgOssUsrObjInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgOssUsrObjInfoQueryReq::CopyFrom(const XmsgOssUsrObjInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgOssUsrObjInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgOssUsrObjInfoQueryReq::IsInitialized() const {
  return true;
}

void XmsgOssUsrObjInfoQueryReq::Swap(XmsgOssUsrObjInfoQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgOssUsrObjInfoQueryReq::InternalSwap(XmsgOssUsrObjInfoQueryReq* other) {
  using std::swap;
  swap(sts_, other->sts_);
  swap(ets_, other->ets_);
  swap(page_, other->page_);
  swap(pagesize_, other->pagesize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgOssUsrObjInfoQueryReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgOssUsrObjInfoQueryRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgOssUsrObjInfoQueryRsp::kObjInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgOssUsrObjInfoQueryRsp::XmsgOssUsrObjInfoQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUsrObjInfoQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgOssUsrObjInfoQueryRsp)
}
XmsgOssUsrObjInfoQueryRsp::XmsgOssUsrObjInfoQueryRsp(const XmsgOssUsrObjInfoQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      objinfo_(from.objinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgOssUsrObjInfoQueryRsp)
}

void XmsgOssUsrObjInfoQueryRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgOssUsrObjInfoQueryRsp::~XmsgOssUsrObjInfoQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgOssUsrObjInfoQueryRsp)
  SharedDtor();
}

void XmsgOssUsrObjInfoQueryRsp::SharedDtor() {
}

void XmsgOssUsrObjInfoQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgOssUsrObjInfoQueryRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgOssUsrObjInfoQueryRsp& XmsgOssUsrObjInfoQueryRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUsrObjInfoQueryRsp();
  return *internal_default_instance();
}

XmsgOssUsrObjInfoQueryRsp* XmsgOssUsrObjInfoQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgOssUsrObjInfoQueryRsp* n = new XmsgOssUsrObjInfoQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgOssUsrObjInfoQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgOssUsrObjInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objinfo_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgOssUsrObjInfoQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgOssUsrObjInfoQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgOssUsrObjInfo objInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_objinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgOssUsrObjInfoQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgOssUsrObjInfoQueryRsp)
  return false;
#undef DO_
}

void XmsgOssUsrObjInfoQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgOssUsrObjInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgOssUsrObjInfo objInfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->objinfo(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgOssUsrObjInfoQueryRsp)
}

::google::protobuf::uint8* XmsgOssUsrObjInfoQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgOssUsrObjInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgOssUsrObjInfo objInfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->objinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgOssUsrObjInfoQueryRsp)
  return target;
}

size_t XmsgOssUsrObjInfoQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgOssUsrObjInfoQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgOssUsrObjInfo objInfo = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->objinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objinfo(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgOssUsrObjInfoQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgOssUsrObjInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgOssUsrObjInfoQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgOssUsrObjInfoQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgOssUsrObjInfoQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgOssUsrObjInfoQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgOssUsrObjInfoQueryRsp::MergeFrom(const XmsgOssUsrObjInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgOssUsrObjInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objinfo_.MergeFrom(from.objinfo_);
}

void XmsgOssUsrObjInfoQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgOssUsrObjInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgOssUsrObjInfoQueryRsp::CopyFrom(const XmsgOssUsrObjInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgOssUsrObjInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgOssUsrObjInfoQueryRsp::IsInitialized() const {
  return true;
}

void XmsgOssUsrObjInfoQueryRsp::Swap(XmsgOssUsrObjInfoQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgOssUsrObjInfoQueryRsp::InternalSwap(XmsgOssUsrObjInfoQueryRsp* other) {
  using std::swap;
  objinfo_.InternalSwap(&other->objinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgOssUsrObjInfoQueryRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgOssUsrObjInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgOssUsrObjInfo::kOidFieldNumber;
const int XmsgOssUsrObjInfo::kObjNameFieldNumber;
const int XmsgOssUsrObjInfo::kObjSizeFieldNumber;
const int XmsgOssUsrObjInfo::kHashValFieldNumber;
const int XmsgOssUsrObjInfo::kGtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgOssUsrObjInfo::XmsgOssUsrObjInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUsrObjInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgOssUsrObjInfo)
}
XmsgOssUsrObjInfo::XmsgOssUsrObjInfo(const XmsgOssUsrObjInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oid().size() > 0) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  objname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.objname().size() > 0) {
    objname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.objname_);
  }
  hashval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hashval().size() > 0) {
    hashval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashval_);
  }
  ::memcpy(&objsize_, &from.objsize_,
    static_cast<size_t>(reinterpret_cast<char*>(&gts_) -
    reinterpret_cast<char*>(&objsize_)) + sizeof(gts_));
  // @@protoc_insertion_point(copy_constructor:XmsgOssUsrObjInfo)
}

void XmsgOssUsrObjInfo::SharedCtor() {
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&objsize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&objsize_)) + sizeof(gts_));
  _cached_size_ = 0;
}

XmsgOssUsrObjInfo::~XmsgOssUsrObjInfo() {
  // @@protoc_insertion_point(destructor:XmsgOssUsrObjInfo)
  SharedDtor();
}

void XmsgOssUsrObjInfo::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgOssUsrObjInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgOssUsrObjInfo::descriptor() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgOssUsrObjInfo& XmsgOssUsrObjInfo::default_instance() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUsrObjInfo();
  return *internal_default_instance();
}

XmsgOssUsrObjInfo* XmsgOssUsrObjInfo::New(::google::protobuf::Arena* arena) const {
  XmsgOssUsrObjInfo* n = new XmsgOssUsrObjInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgOssUsrObjInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgOssUsrObjInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&objsize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&objsize_)) + sizeof(gts_));
  _internal_metadata_.Clear();
}

bool XmsgOssUsrObjInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgOssUsrObjInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string oid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssUsrObjInfo.oid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string objName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_objname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->objname().data(), static_cast<int>(this->objname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssUsrObjInfo.objName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 objSize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hashVal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashval()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hashval().data(), static_cast<int>(this->hashval().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssUsrObjInfo.hashVal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgOssUsrObjInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgOssUsrObjInfo)
  return false;
#undef DO_
}

void XmsgOssUsrObjInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgOssUsrObjInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssUsrObjInfo.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oid(), output);
  }

  // string objName = 2;
  if (this->objname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->objname().data(), static_cast<int>(this->objname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssUsrObjInfo.objName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->objname(), output);
  }

  // uint64 objSize = 3;
  if (this->objsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->objsize(), output);
  }

  // string hashVal = 4;
  if (this->hashval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashval().data(), static_cast<int>(this->hashval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssUsrObjInfo.hashVal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->hashval(), output);
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->gts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgOssUsrObjInfo)
}

::google::protobuf::uint8* XmsgOssUsrObjInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgOssUsrObjInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssUsrObjInfo.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oid(), target);
  }

  // string objName = 2;
  if (this->objname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->objname().data(), static_cast<int>(this->objname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssUsrObjInfo.objName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->objname(), target);
  }

  // uint64 objSize = 3;
  if (this->objsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->objsize(), target);
  }

  // string hashVal = 4;
  if (this->hashval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashval().data(), static_cast<int>(this->hashval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssUsrObjInfo.hashVal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->hashval(), target);
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->gts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgOssUsrObjInfo)
  return target;
}

size_t XmsgOssUsrObjInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgOssUsrObjInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string oid = 1;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  // string objName = 2;
  if (this->objname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->objname());
  }

  // string hashVal = 4;
  if (this->hashval().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hashval());
  }

  // uint64 objSize = 3;
  if (this->objsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objsize());
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgOssUsrObjInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgOssUsrObjInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgOssUsrObjInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgOssUsrObjInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgOssUsrObjInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgOssUsrObjInfo)
    MergeFrom(*source);
  }
}

void XmsgOssUsrObjInfo::MergeFrom(const XmsgOssUsrObjInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgOssUsrObjInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  if (from.objname().size() > 0) {

    objname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.objname_);
  }
  if (from.hashval().size() > 0) {

    hashval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashval_);
  }
  if (from.objsize() != 0) {
    set_objsize(from.objsize());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
}

void XmsgOssUsrObjInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgOssUsrObjInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgOssUsrObjInfo::CopyFrom(const XmsgOssUsrObjInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgOssUsrObjInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgOssUsrObjInfo::IsInitialized() const {
  return true;
}

void XmsgOssUsrObjInfo::Swap(XmsgOssUsrObjInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgOssUsrObjInfo::InternalSwap(XmsgOssUsrObjInfo* other) {
  using std::swap;
  oid_.Swap(&other->oid_);
  objname_.Swap(&other->objname_);
  hashval_.Swap(&other->hashval_);
  swap(objsize_, other->objsize_);
  swap(gts_, other->gts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgOssUsrObjInfo::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgClientTokenInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgClientTokenInfo::kCgtFieldNumber;
const int XmsgClientTokenInfo::kTokenFieldNumber;
const int XmsgClientTokenInfo::kAlgFieldNumber;
const int XmsgClientTokenInfo::kSlatFieldNumber;
const int XmsgClientTokenInfo::kPlatFieldNumber;
const int XmsgClientTokenInfo::kDidFieldNumber;
const int XmsgClientTokenInfo::kSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgClientTokenInfo::XmsgClientTokenInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgClientTokenInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgClientTokenInfo)
}
XmsgClientTokenInfo::XmsgClientTokenInfo(const XmsgClientTokenInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  alg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alg().size() > 0) {
    alg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alg_);
  }
  slat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.slat().size() > 0) {
    slat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slat_);
  }
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plat().size() > 0) {
    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.did().size() > 0) {
    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign().size() > 0) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgClientTokenInfo)
}

void XmsgClientTokenInfo::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgClientTokenInfo::~XmsgClientTokenInfo() {
  // @@protoc_insertion_point(destructor:XmsgClientTokenInfo)
  SharedDtor();
}

void XmsgClientTokenInfo::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgClientTokenInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgClientTokenInfo::descriptor() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgClientTokenInfo& XmsgClientTokenInfo::default_instance() {
  ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgClientTokenInfo();
  return *internal_default_instance();
}

XmsgClientTokenInfo* XmsgClientTokenInfo::New(::google::protobuf::Arena* arena) const {
  XmsgClientTokenInfo* n = new XmsgClientTokenInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgClientTokenInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgClientTokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgClientTokenInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgClientTokenInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgClientTokenInfo.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgClientTokenInfo.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string alg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alg().data(), static_cast<int>(this->alg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgClientTokenInfo.alg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string slat = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->slat().data(), static_cast<int>(this->slat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgClientTokenInfo.slat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plat = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plat().data(), static_cast<int>(this->plat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgClientTokenInfo.plat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string did = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->did().data(), static_cast<int>(this->did().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgClientTokenInfo.did"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sign = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sign().data(), static_cast<int>(this->sign().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgClientTokenInfo.sign"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgClientTokenInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgClientTokenInfo)
  return false;
#undef DO_
}

void XmsgClientTokenInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgClientTokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgClientTokenInfo.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgClientTokenInfo.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // string alg = 3;
  if (this->alg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alg().data(), static_cast<int>(this->alg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgClientTokenInfo.alg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->alg(), output);
  }

  // string slat = 4;
  if (this->slat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slat().data(), static_cast<int>(this->slat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgClientTokenInfo.slat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->slat(), output);
  }

  // string plat = 5;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgClientTokenInfo.plat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->plat(), output);
  }

  // string did = 6;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgClientTokenInfo.did");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->did(), output);
  }

  // string sign = 7;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), static_cast<int>(this->sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgClientTokenInfo.sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sign(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgClientTokenInfo)
}

::google::protobuf::uint8* XmsgClientTokenInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgClientTokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgClientTokenInfo.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgClientTokenInfo.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // string alg = 3;
  if (this->alg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alg().data(), static_cast<int>(this->alg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgClientTokenInfo.alg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->alg(), target);
  }

  // string slat = 4;
  if (this->slat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slat().data(), static_cast<int>(this->slat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgClientTokenInfo.slat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->slat(), target);
  }

  // string plat = 5;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgClientTokenInfo.plat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->plat(), target);
  }

  // string did = 6;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgClientTokenInfo.did");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->did(), target);
  }

  // string sign = 7;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), static_cast<int>(this->sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgClientTokenInfo.sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sign(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgClientTokenInfo)
  return target;
}

size_t XmsgClientTokenInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgClientTokenInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string alg = 3;
  if (this->alg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alg());
  }

  // string slat = 4;
  if (this->slat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->slat());
  }

  // string plat = 5;
  if (this->plat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plat());
  }

  // string did = 6;
  if (this->did().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->did());
  }

  // string sign = 7;
  if (this->sign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgClientTokenInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgClientTokenInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgClientTokenInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgClientTokenInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgClientTokenInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgClientTokenInfo)
    MergeFrom(*source);
  }
}

void XmsgClientTokenInfo::MergeFrom(const XmsgClientTokenInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgClientTokenInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.alg().size() > 0) {

    alg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alg_);
  }
  if (from.slat().size() > 0) {

    slat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slat_);
  }
  if (from.plat().size() > 0) {

    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  if (from.did().size() > 0) {

    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  if (from.sign().size() > 0) {

    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
}

void XmsgClientTokenInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgClientTokenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgClientTokenInfo::CopyFrom(const XmsgClientTokenInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgClientTokenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgClientTokenInfo::IsInitialized() const {
  return true;
}

void XmsgClientTokenInfo::Swap(XmsgClientTokenInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgClientTokenInfo::InternalSwap(XmsgClientTokenInfo* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  token_.Swap(&other->token_);
  alg_.Swap(&other->alg_);
  slat_.Swap(&other->slat_);
  plat_.Swap(&other->plat_);
  did_.Swap(&other->did_);
  sign_.Swap(&other->sign_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgClientTokenInfo::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
