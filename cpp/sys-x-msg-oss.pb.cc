// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sys-x-msg-oss.proto

#include "sys-x-msg-oss.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgOssInfoQueryReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgOssInfoQueryReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgOssInfoQueryReq_ExtEntry_DoNotUse_default_instance_;
class XmsgOssInfoQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgOssInfoQueryReq>
      _instance;
} _XmsgOssInfoQueryReq_default_instance_;
class XmsgOssInfoQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgOssInfoQueryRsp>
      _instance;
} _XmsgOssInfoQueryRsp_default_instance_;
class XmsgImHlrUsrAuthInfoQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrUsrAuthInfoQueryReq>
      _instance;
} _XmsgImHlrUsrAuthInfoQueryReq_default_instance_;
class XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrUsrAuthInfoQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrUsrAuthInfoQueryRsp>
      _instance;
} _XmsgImHlrUsrAuthInfoQueryRsp_default_instance_;
class XmsgImGroupObjInfoQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupObjInfoQueryReq>
      _instance;
} _XmsgImGroupObjInfoQueryReq_default_instance_;
class XmsgImGroupObjInfoQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupObjInfoQueryRsp>
      _instance;
} _XmsgImGroupObjInfoQueryRsp_default_instance_;
class XmsgImClientDeviceInfo_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImClientDeviceInfo_ExtEntry_DoNotUse>
      _instance;
} _XmsgImClientDeviceInfo_ExtEntry_DoNotUse_default_instance_;
class XmsgImClientDeviceInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImClientDeviceInfo>
      _instance;
} _XmsgImClientDeviceInfo_default_instance_;
namespace protobuf_sys_2dx_2dmsg_2doss_2eproto {
void InitDefaultsXmsgOssInfoQueryReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgOssInfoQueryReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgOssInfoQueryReq_ExtEntry_DoNotUse();
  }
  ::XmsgOssInfoQueryReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgOssInfoQueryReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgOssInfoQueryReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgOssInfoQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssInfoQueryReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgOssInfoQueryReq_default_instance_;
    new (ptr) ::XmsgOssInfoQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgOssInfoQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgOssInfoQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgOssInfoQueryReqImpl);
}

void InitDefaultsXmsgOssInfoQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgOssInfoQueryRsp_default_instance_;
    new (ptr) ::XmsgOssInfoQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgOssInfoQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgOssInfoQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgOssInfoQueryRspImpl);
}

void InitDefaultsXmsgImHlrUsrAuthInfoQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrUsrAuthInfoQueryReq_default_instance_;
    new (ptr) ::XmsgImHlrUsrAuthInfoQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrUsrAuthInfoQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrUsrAuthInfoQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrUsrAuthInfoQueryReqImpl);
}

void InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrUsrAuthInfoQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImClientDeviceInfo();
  protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrUsrAuthInfoQueryRsp_default_instance_;
    new (ptr) ::XmsgImHlrUsrAuthInfoQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrUsrAuthInfoQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrUsrAuthInfoQueryRspImpl);
}

void InitDefaultsXmsgImGroupObjInfoQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupObjInfoQueryReq_default_instance_;
    new (ptr) ::XmsgImGroupObjInfoQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupObjInfoQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupObjInfoQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupObjInfoQueryReqImpl);
}

void InitDefaultsXmsgImGroupObjInfoQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupObjInfoQueryRsp_default_instance_;
    new (ptr) ::XmsgImGroupObjInfoQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupObjInfoQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupObjInfoQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupObjInfoQueryRspImpl);
}

void InitDefaultsXmsgImClientDeviceInfo_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImClientDeviceInfo_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImClientDeviceInfo_ExtEntry_DoNotUse();
  }
  ::XmsgImClientDeviceInfo_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImClientDeviceInfo_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImClientDeviceInfo_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImClientDeviceInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImClientDeviceInfo_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImClientDeviceInfo_default_instance_;
    new (ptr) ::XmsgImClientDeviceInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImClientDeviceInfo::InitAsDefaultInstance();
}

void InitDefaultsXmsgImClientDeviceInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImClientDeviceInfoImpl);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssInfoQueryReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssInfoQueryReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssInfoQueryReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssInfoQueryReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssInfoQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssInfoQueryReq, oid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssInfoQueryReq, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssInfoQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssInfoQueryRsp, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssInfoQueryRsp, hashval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssInfoQueryRsp, objname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssInfoQueryRsp, storepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssInfoQueryRsp, objsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgOssInfoQueryRsp, gts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp, secret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp, expired_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrAuthInfoQueryRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupObjInfoQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupObjInfoQueryReq, ucgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupObjInfoQueryReq, gcgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupObjInfoQueryReq, oid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupObjInfoQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupObjInfoQueryRsp, ucgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupObjInfoQueryRsp, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDeviceInfo_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDeviceInfo_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDeviceInfo_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDeviceInfo_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDeviceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDeviceInfo, plat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDeviceInfo, did_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDeviceInfo, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImClientDeviceInfo, ext_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::XmsgOssInfoQueryReq_ExtEntry_DoNotUse)},
  { 9, -1, sizeof(::XmsgOssInfoQueryReq)},
  { 16, -1, sizeof(::XmsgOssInfoQueryRsp)},
  { 27, -1, sizeof(::XmsgImHlrUsrAuthInfoQueryReq)},
  { 34, 41, sizeof(::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse)},
  { 43, -1, sizeof(::XmsgImHlrUsrAuthInfoQueryRsp)},
  { 53, -1, sizeof(::XmsgImGroupObjInfoQueryReq)},
  { 61, -1, sizeof(::XmsgImGroupObjInfoQueryRsp)},
  { 68, 75, sizeof(::XmsgImClientDeviceInfo_ExtEntry_DoNotUse)},
  { 77, -1, sizeof(::XmsgImClientDeviceInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgOssInfoQueryReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgOssInfoQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgOssInfoQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrUsrAuthInfoQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrUsrAuthInfoQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupObjInfoQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupObjInfoQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImClientDeviceInfo_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImClientDeviceInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sys-x-msg-oss.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023sys-x-msg-oss.proto\"z\n\023XmsgOssInfoQuer"
      "yReq\022\013\n\003oid\030\001 \001(\t\022*\n\003ext\030\002 \003(\0132\035.XmsgOss"
      "InfoQueryReq.ExtEntry\032*\n\010ExtEntry\022\013\n\003key"
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"u\n\023XmsgOssInfo"
      "QueryRsp\022\013\n\003cgt\030\001 \001(\t\022\017\n\007hashVal\030\002 \001(\t\022\017"
      "\n\007objName\030\003 \001(\t\022\021\n\tstorePath\030\004 \001(\t\022\017\n\007ob"
      "jSize\030\005 \001(\004\022\013\n\003gts\030\006 \001(\004\":\n\034XmsgImHlrUsr"
      "AuthInfoQueryReq\022\r\n\005token\030\001 \001(\t\022\013\n\003cgt\030\002"
      " \001(\t\"\324\001\n\034XmsgImHlrUsrAuthInfoQueryRsp\022\016\n"
      "\006secret\030\001 \001(\t\022\013\n\003gts\030\002 \001(\004\022\017\n\007expired\030\003 "
      "\001(\004\022%\n\004info\030\004 \001(\0132\027.XmsgImClientDeviceIn"
      "fo\0223\n\003ext\030\005 \003(\0132&.XmsgImHlrUsrAuthInfoQu"
      "eryRsp.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t"
      "\022\r\n\005value\030\002 \001(\t:\0028\001\"E\n\032XmsgImGroupObjInf"
      "oQueryReq\022\014\n\004ucgt\030\001 \001(\t\022\014\n\004gcgt\030\002 \001(\t\022\013\n"
      "\003oid\030\003 \001(\t\"7\n\032XmsgImGroupObjInfoQueryRsp"
      "\022\014\n\004ucgt\030\001 \001(\t\022\013\n\003gts\030\002 \001(\004\"\233\001\n\026XmsgImCl"
      "ientDeviceInfo\022\014\n\004plat\030\001 \001(\t\022\013\n\003did\030\002 \001("
      "\t\022\013\n\003ver\030\003 \001(\t\022-\n\003ext\030\004 \003(\0132 .XmsgImClie"
      "ntDeviceInfo.ExtEntry\032*\n\010ExtEntry\022\013\n\003key"
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\033\n\010x.msg.pbB\017X"
      "msgOssMgrUsrPbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 862);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sys-x-msg-oss.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sys_2dx_2dmsg_2doss_2eproto

// ===================================================================

XmsgOssInfoQueryReq_ExtEntry_DoNotUse::XmsgOssInfoQueryReq_ExtEntry_DoNotUse() {}
XmsgOssInfoQueryReq_ExtEntry_DoNotUse::XmsgOssInfoQueryReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgOssInfoQueryReq_ExtEntry_DoNotUse::MergeFrom(const XmsgOssInfoQueryReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgOssInfoQueryReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[0];
}
void XmsgOssInfoQueryReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgOssInfoQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgOssInfoQueryReq::kOidFieldNumber;
const int XmsgOssInfoQueryReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgOssInfoQueryReq::XmsgOssInfoQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssInfoQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgOssInfoQueryReq)
}
XmsgOssInfoQueryReq::XmsgOssInfoQueryReq(const XmsgOssInfoQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oid().size() > 0) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgOssInfoQueryReq)
}

void XmsgOssInfoQueryReq::SharedCtor() {
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgOssInfoQueryReq::~XmsgOssInfoQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgOssInfoQueryReq)
  SharedDtor();
}

void XmsgOssInfoQueryReq::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgOssInfoQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgOssInfoQueryReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgOssInfoQueryReq& XmsgOssInfoQueryReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssInfoQueryReq();
  return *internal_default_instance();
}

XmsgOssInfoQueryReq* XmsgOssInfoQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgOssInfoQueryReq* n = new XmsgOssInfoQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgOssInfoQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgOssInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgOssInfoQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgOssInfoQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string oid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssInfoQueryReq.oid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          XmsgOssInfoQueryReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgOssInfoQueryReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssInfoQueryReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssInfoQueryReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgOssInfoQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgOssInfoQueryReq)
  return false;
#undef DO_
}

void XmsgOssInfoQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgOssInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssInfoQueryReq.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oid(), output);
  }

  // map<string, string> ext = 2;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssInfoQueryReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssInfoQueryReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgOssInfoQueryReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgOssInfoQueryReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgOssInfoQueryReq)
}

::google::protobuf::uint8* XmsgOssInfoQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgOssInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssInfoQueryReq.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oid(), target);
  }

  // map<string, string> ext = 2;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssInfoQueryReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgOssInfoQueryReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgOssInfoQueryReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgOssInfoQueryReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgOssInfoQueryReq)
  return target;
}

size_t XmsgOssInfoQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgOssInfoQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgOssInfoQueryReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string oid = 1;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgOssInfoQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgOssInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgOssInfoQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgOssInfoQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgOssInfoQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgOssInfoQueryReq)
    MergeFrom(*source);
  }
}

void XmsgOssInfoQueryReq::MergeFrom(const XmsgOssInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgOssInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
}

void XmsgOssInfoQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgOssInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgOssInfoQueryReq::CopyFrom(const XmsgOssInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgOssInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgOssInfoQueryReq::IsInitialized() const {
  return true;
}

void XmsgOssInfoQueryReq::Swap(XmsgOssInfoQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgOssInfoQueryReq::InternalSwap(XmsgOssInfoQueryReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  oid_.Swap(&other->oid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgOssInfoQueryReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgOssInfoQueryRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgOssInfoQueryRsp::kCgtFieldNumber;
const int XmsgOssInfoQueryRsp::kHashValFieldNumber;
const int XmsgOssInfoQueryRsp::kObjNameFieldNumber;
const int XmsgOssInfoQueryRsp::kStorePathFieldNumber;
const int XmsgOssInfoQueryRsp::kObjSizeFieldNumber;
const int XmsgOssInfoQueryRsp::kGtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgOssInfoQueryRsp::XmsgOssInfoQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssInfoQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgOssInfoQueryRsp)
}
XmsgOssInfoQueryRsp::XmsgOssInfoQueryRsp(const XmsgOssInfoQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  hashval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hashval().size() > 0) {
    hashval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashval_);
  }
  objname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.objname().size() > 0) {
    objname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.objname_);
  }
  storepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.storepath().size() > 0) {
    storepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storepath_);
  }
  ::memcpy(&objsize_, &from.objsize_,
    static_cast<size_t>(reinterpret_cast<char*>(&gts_) -
    reinterpret_cast<char*>(&objsize_)) + sizeof(gts_));
  // @@protoc_insertion_point(copy_constructor:XmsgOssInfoQueryRsp)
}

void XmsgOssInfoQueryRsp::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&objsize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&objsize_)) + sizeof(gts_));
  _cached_size_ = 0;
}

XmsgOssInfoQueryRsp::~XmsgOssInfoQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgOssInfoQueryRsp)
  SharedDtor();
}

void XmsgOssInfoQueryRsp::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgOssInfoQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgOssInfoQueryRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgOssInfoQueryRsp& XmsgOssInfoQueryRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssInfoQueryRsp();
  return *internal_default_instance();
}

XmsgOssInfoQueryRsp* XmsgOssInfoQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgOssInfoQueryRsp* n = new XmsgOssInfoQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgOssInfoQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgOssInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&objsize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&objsize_)) + sizeof(gts_));
  _internal_metadata_.Clear();
}

bool XmsgOssInfoQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgOssInfoQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssInfoQueryRsp.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hashVal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashval()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hashval().data(), static_cast<int>(this->hashval().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssInfoQueryRsp.hashVal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string objName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_objname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->objname().data(), static_cast<int>(this->objname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssInfoQueryRsp.objName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string storePath = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_storepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->storepath().data(), static_cast<int>(this->storepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgOssInfoQueryRsp.storePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 objSize = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgOssInfoQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgOssInfoQueryRsp)
  return false;
#undef DO_
}

void XmsgOssInfoQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgOssInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssInfoQueryRsp.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string hashVal = 2;
  if (this->hashval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashval().data(), static_cast<int>(this->hashval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssInfoQueryRsp.hashVal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hashval(), output);
  }

  // string objName = 3;
  if (this->objname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->objname().data(), static_cast<int>(this->objname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssInfoQueryRsp.objName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->objname(), output);
  }

  // string storePath = 4;
  if (this->storepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storepath().data(), static_cast<int>(this->storepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssInfoQueryRsp.storePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->storepath(), output);
  }

  // uint64 objSize = 5;
  if (this->objsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->objsize(), output);
  }

  // uint64 gts = 6;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->gts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgOssInfoQueryRsp)
}

::google::protobuf::uint8* XmsgOssInfoQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgOssInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssInfoQueryRsp.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string hashVal = 2;
  if (this->hashval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashval().data(), static_cast<int>(this->hashval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssInfoQueryRsp.hashVal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hashval(), target);
  }

  // string objName = 3;
  if (this->objname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->objname().data(), static_cast<int>(this->objname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssInfoQueryRsp.objName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->objname(), target);
  }

  // string storePath = 4;
  if (this->storepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storepath().data(), static_cast<int>(this->storepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgOssInfoQueryRsp.storePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->storepath(), target);
  }

  // uint64 objSize = 5;
  if (this->objsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->objsize(), target);
  }

  // uint64 gts = 6;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->gts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgOssInfoQueryRsp)
  return target;
}

size_t XmsgOssInfoQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgOssInfoQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string hashVal = 2;
  if (this->hashval().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hashval());
  }

  // string objName = 3;
  if (this->objname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->objname());
  }

  // string storePath = 4;
  if (this->storepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->storepath());
  }

  // uint64 objSize = 5;
  if (this->objsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objsize());
  }

  // uint64 gts = 6;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgOssInfoQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgOssInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgOssInfoQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgOssInfoQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgOssInfoQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgOssInfoQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgOssInfoQueryRsp::MergeFrom(const XmsgOssInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgOssInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.hashval().size() > 0) {

    hashval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashval_);
  }
  if (from.objname().size() > 0) {

    objname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.objname_);
  }
  if (from.storepath().size() > 0) {

    storepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storepath_);
  }
  if (from.objsize() != 0) {
    set_objsize(from.objsize());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
}

void XmsgOssInfoQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgOssInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgOssInfoQueryRsp::CopyFrom(const XmsgOssInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgOssInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgOssInfoQueryRsp::IsInitialized() const {
  return true;
}

void XmsgOssInfoQueryRsp::Swap(XmsgOssInfoQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgOssInfoQueryRsp::InternalSwap(XmsgOssInfoQueryRsp* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  hashval_.Swap(&other->hashval_);
  objname_.Swap(&other->objname_);
  storepath_.Swap(&other->storepath_);
  swap(objsize_, other->objsize_);
  swap(gts_, other->gts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgOssInfoQueryRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImHlrUsrAuthInfoQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrUsrAuthInfoQueryReq::kTokenFieldNumber;
const int XmsgImHlrUsrAuthInfoQueryReq::kCgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrUsrAuthInfoQueryReq::XmsgImHlrUsrAuthInfoQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImHlrUsrAuthInfoQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrUsrAuthInfoQueryReq)
}
XmsgImHlrUsrAuthInfoQueryReq::XmsgImHlrUsrAuthInfoQueryReq(const XmsgImHlrUsrAuthInfoQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrUsrAuthInfoQueryReq)
}

void XmsgImHlrUsrAuthInfoQueryReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImHlrUsrAuthInfoQueryReq::~XmsgImHlrUsrAuthInfoQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImHlrUsrAuthInfoQueryReq)
  SharedDtor();
}

void XmsgImHlrUsrAuthInfoQueryReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImHlrUsrAuthInfoQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrUsrAuthInfoQueryReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrUsrAuthInfoQueryReq& XmsgImHlrUsrAuthInfoQueryReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImHlrUsrAuthInfoQueryReq();
  return *internal_default_instance();
}

XmsgImHlrUsrAuthInfoQueryReq* XmsgImHlrUsrAuthInfoQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrUsrAuthInfoQueryReq* n = new XmsgImHlrUsrAuthInfoQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrUsrAuthInfoQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrUsrAuthInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImHlrUsrAuthInfoQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrUsrAuthInfoQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrAuthInfoQueryReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrAuthInfoQueryReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrUsrAuthInfoQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrUsrAuthInfoQueryReq)
  return false;
#undef DO_
}

void XmsgImHlrUsrAuthInfoQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrUsrAuthInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrAuthInfoQueryReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrAuthInfoQueryReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cgt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrUsrAuthInfoQueryReq)
}

::google::protobuf::uint8* XmsgImHlrUsrAuthInfoQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrUsrAuthInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrAuthInfoQueryReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrAuthInfoQueryReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cgt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrUsrAuthInfoQueryReq)
  return target;
}

size_t XmsgImHlrUsrAuthInfoQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrUsrAuthInfoQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrUsrAuthInfoQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrUsrAuthInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrUsrAuthInfoQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrUsrAuthInfoQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrUsrAuthInfoQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrUsrAuthInfoQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImHlrUsrAuthInfoQueryReq::MergeFrom(const XmsgImHlrUsrAuthInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrUsrAuthInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImHlrUsrAuthInfoQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrUsrAuthInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrUsrAuthInfoQueryReq::CopyFrom(const XmsgImHlrUsrAuthInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrUsrAuthInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrUsrAuthInfoQueryReq::IsInitialized() const {
  return true;
}

void XmsgImHlrUsrAuthInfoQueryReq::Swap(XmsgImHlrUsrAuthInfoQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrUsrAuthInfoQueryReq::InternalSwap(XmsgImHlrUsrAuthInfoQueryReq* other) {
  using std::swap;
  token_.Swap(&other->token_);
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrUsrAuthInfoQueryReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse() {}
XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[4];
}
void XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrUsrAuthInfoQueryRsp::InitAsDefaultInstance() {
  ::_XmsgImHlrUsrAuthInfoQueryRsp_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImClientDeviceInfo*>(
      ::XmsgImClientDeviceInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrUsrAuthInfoQueryRsp::kSecretFieldNumber;
const int XmsgImHlrUsrAuthInfoQueryRsp::kGtsFieldNumber;
const int XmsgImHlrUsrAuthInfoQueryRsp::kExpiredFieldNumber;
const int XmsgImHlrUsrAuthInfoQueryRsp::kInfoFieldNumber;
const int XmsgImHlrUsrAuthInfoQueryRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrUsrAuthInfoQueryRsp::XmsgImHlrUsrAuthInfoQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrUsrAuthInfoQueryRsp)
}
XmsgImHlrUsrAuthInfoQueryRsp::XmsgImHlrUsrAuthInfoQueryRsp(const XmsgImHlrUsrAuthInfoQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret().size() > 0) {
    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_info()) {
    info_ = new ::XmsgImClientDeviceInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&gts_, &from.gts_,
    static_cast<size_t>(reinterpret_cast<char*>(&expired_) -
    reinterpret_cast<char*>(&gts_)) + sizeof(expired_));
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrUsrAuthInfoQueryRsp)
}

void XmsgImHlrUsrAuthInfoQueryRsp::SharedCtor() {
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expired_) -
      reinterpret_cast<char*>(&info_)) + sizeof(expired_));
  _cached_size_ = 0;
}

XmsgImHlrUsrAuthInfoQueryRsp::~XmsgImHlrUsrAuthInfoQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImHlrUsrAuthInfoQueryRsp)
  SharedDtor();
}

void XmsgImHlrUsrAuthInfoQueryRsp::SharedDtor() {
  secret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void XmsgImHlrUsrAuthInfoQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrUsrAuthInfoQueryRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrUsrAuthInfoQueryRsp& XmsgImHlrUsrAuthInfoQueryRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp();
  return *internal_default_instance();
}

XmsgImHlrUsrAuthInfoQueryRsp* XmsgImHlrUsrAuthInfoQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrUsrAuthInfoQueryRsp* n = new XmsgImHlrUsrAuthInfoQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrUsrAuthInfoQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrUsrAuthInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&gts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expired_) -
      reinterpret_cast<char*>(&gts_)) + sizeof(expired_));
  _internal_metadata_.Clear();
}

bool XmsgImHlrUsrAuthInfoQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrUsrAuthInfoQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string secret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secret().data(), static_cast<int>(this->secret().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrAuthInfoQueryRsp.secret"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 expired = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expired_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImClientDeviceInfo info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrAuthInfoQueryRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrAuthInfoQueryRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrUsrAuthInfoQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrUsrAuthInfoQueryRsp)
  return false;
#undef DO_
}

void XmsgImHlrUsrAuthInfoQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrUsrAuthInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string secret = 1;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrAuthInfoQueryRsp.secret");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->secret(), output);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gts(), output);
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->expired(), output);
  }

  // .XmsgImClientDeviceInfo info = 4;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->info_, output);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrAuthInfoQueryRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrAuthInfoQueryRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrUsrAuthInfoQueryRsp)
}

::google::protobuf::uint8* XmsgImHlrUsrAuthInfoQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrUsrAuthInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string secret = 1;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrAuthInfoQueryRsp.secret");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->secret(), target);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gts(), target);
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->expired(), target);
  }

  // .XmsgImClientDeviceInfo info = 4;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->info_, deterministic, target);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrAuthInfoQueryRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrAuthInfoQueryRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrUsrAuthInfoQueryRsp)
  return target;
}

size_t XmsgImHlrUsrAuthInfoQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrUsrAuthInfoQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string secret = 1;
  if (this->secret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secret());
  }

  // .XmsgImClientDeviceInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->expired());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrUsrAuthInfoQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrUsrAuthInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrUsrAuthInfoQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrUsrAuthInfoQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrUsrAuthInfoQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrUsrAuthInfoQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImHlrUsrAuthInfoQueryRsp::MergeFrom(const XmsgImHlrUsrAuthInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrUsrAuthInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.secret().size() > 0) {

    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_info()) {
    mutable_info()->::XmsgImClientDeviceInfo::MergeFrom(from.info());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.expired() != 0) {
    set_expired(from.expired());
  }
}

void XmsgImHlrUsrAuthInfoQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrUsrAuthInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrUsrAuthInfoQueryRsp::CopyFrom(const XmsgImHlrUsrAuthInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrUsrAuthInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrUsrAuthInfoQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImHlrUsrAuthInfoQueryRsp::Swap(XmsgImHlrUsrAuthInfoQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrUsrAuthInfoQueryRsp::InternalSwap(XmsgImHlrUsrAuthInfoQueryRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  secret_.Swap(&other->secret_);
  swap(info_, other->info_);
  swap(gts_, other->gts_);
  swap(expired_, other->expired_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrUsrAuthInfoQueryRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupObjInfoQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupObjInfoQueryReq::kUcgtFieldNumber;
const int XmsgImGroupObjInfoQueryReq::kGcgtFieldNumber;
const int XmsgImGroupObjInfoQueryReq::kOidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupObjInfoQueryReq::XmsgImGroupObjInfoQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImGroupObjInfoQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupObjInfoQueryReq)
}
XmsgImGroupObjInfoQueryReq::XmsgImGroupObjInfoQueryReq(const XmsgImGroupObjInfoQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ucgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ucgt().size() > 0) {
    ucgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ucgt_);
  }
  gcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gcgt().size() > 0) {
    gcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcgt_);
  }
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oid().size() > 0) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupObjInfoQueryReq)
}

void XmsgImGroupObjInfoQueryReq::SharedCtor() {
  ucgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImGroupObjInfoQueryReq::~XmsgImGroupObjInfoQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupObjInfoQueryReq)
  SharedDtor();
}

void XmsgImGroupObjInfoQueryReq::SharedDtor() {
  ucgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupObjInfoQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupObjInfoQueryReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupObjInfoQueryReq& XmsgImGroupObjInfoQueryReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImGroupObjInfoQueryReq();
  return *internal_default_instance();
}

XmsgImGroupObjInfoQueryReq* XmsgImGroupObjInfoQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupObjInfoQueryReq* n = new XmsgImGroupObjInfoQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupObjInfoQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupObjInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ucgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImGroupObjInfoQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupObjInfoQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ucgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ucgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ucgt().data(), static_cast<int>(this->ucgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupObjInfoQueryReq.ucgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gcgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gcgt().data(), static_cast<int>(this->gcgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupObjInfoQueryReq.gcgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string oid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupObjInfoQueryReq.oid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupObjInfoQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupObjInfoQueryReq)
  return false;
#undef DO_
}

void XmsgImGroupObjInfoQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupObjInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ucgt = 1;
  if (this->ucgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ucgt().data(), static_cast<int>(this->ucgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryReq.ucgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ucgt(), output);
  }

  // string gcgt = 2;
  if (this->gcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcgt().data(), static_cast<int>(this->gcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryReq.gcgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gcgt(), output);
  }

  // string oid = 3;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryReq.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->oid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupObjInfoQueryReq)
}

::google::protobuf::uint8* XmsgImGroupObjInfoQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupObjInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ucgt = 1;
  if (this->ucgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ucgt().data(), static_cast<int>(this->ucgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryReq.ucgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ucgt(), target);
  }

  // string gcgt = 2;
  if (this->gcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcgt().data(), static_cast<int>(this->gcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryReq.gcgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gcgt(), target);
  }

  // string oid = 3;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryReq.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->oid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupObjInfoQueryReq)
  return target;
}

size_t XmsgImGroupObjInfoQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupObjInfoQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ucgt = 1;
  if (this->ucgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ucgt());
  }

  // string gcgt = 2;
  if (this->gcgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gcgt());
  }

  // string oid = 3;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupObjInfoQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupObjInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupObjInfoQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupObjInfoQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupObjInfoQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupObjInfoQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupObjInfoQueryReq::MergeFrom(const XmsgImGroupObjInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupObjInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ucgt().size() > 0) {

    ucgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ucgt_);
  }
  if (from.gcgt().size() > 0) {

    gcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcgt_);
  }
  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
}

void XmsgImGroupObjInfoQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupObjInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupObjInfoQueryReq::CopyFrom(const XmsgImGroupObjInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupObjInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupObjInfoQueryReq::IsInitialized() const {
  return true;
}

void XmsgImGroupObjInfoQueryReq::Swap(XmsgImGroupObjInfoQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupObjInfoQueryReq::InternalSwap(XmsgImGroupObjInfoQueryReq* other) {
  using std::swap;
  ucgt_.Swap(&other->ucgt_);
  gcgt_.Swap(&other->gcgt_);
  oid_.Swap(&other->oid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupObjInfoQueryReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupObjInfoQueryRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupObjInfoQueryRsp::kUcgtFieldNumber;
const int XmsgImGroupObjInfoQueryRsp::kGtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupObjInfoQueryRsp::XmsgImGroupObjInfoQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImGroupObjInfoQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupObjInfoQueryRsp)
}
XmsgImGroupObjInfoQueryRsp::XmsgImGroupObjInfoQueryRsp(const XmsgImGroupObjInfoQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ucgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ucgt().size() > 0) {
    ucgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ucgt_);
  }
  gts_ = from.gts_;
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupObjInfoQueryRsp)
}

void XmsgImGroupObjInfoQueryRsp::SharedCtor() {
  ucgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gts_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgImGroupObjInfoQueryRsp::~XmsgImGroupObjInfoQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupObjInfoQueryRsp)
  SharedDtor();
}

void XmsgImGroupObjInfoQueryRsp::SharedDtor() {
  ucgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupObjInfoQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupObjInfoQueryRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupObjInfoQueryRsp& XmsgImGroupObjInfoQueryRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImGroupObjInfoQueryRsp();
  return *internal_default_instance();
}

XmsgImGroupObjInfoQueryRsp* XmsgImGroupObjInfoQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupObjInfoQueryRsp* n = new XmsgImGroupObjInfoQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupObjInfoQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupObjInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ucgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gts_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImGroupObjInfoQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupObjInfoQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ucgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ucgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ucgt().data(), static_cast<int>(this->ucgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupObjInfoQueryRsp.ucgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupObjInfoQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupObjInfoQueryRsp)
  return false;
#undef DO_
}

void XmsgImGroupObjInfoQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupObjInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ucgt = 1;
  if (this->ucgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ucgt().data(), static_cast<int>(this->ucgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryRsp.ucgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ucgt(), output);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupObjInfoQueryRsp)
}

::google::protobuf::uint8* XmsgImGroupObjInfoQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupObjInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ucgt = 1;
  if (this->ucgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ucgt().data(), static_cast<int>(this->ucgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryRsp.ucgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ucgt(), target);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupObjInfoQueryRsp)
  return target;
}

size_t XmsgImGroupObjInfoQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupObjInfoQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ucgt = 1;
  if (this->ucgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ucgt());
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupObjInfoQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupObjInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupObjInfoQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupObjInfoQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupObjInfoQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupObjInfoQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupObjInfoQueryRsp::MergeFrom(const XmsgImGroupObjInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupObjInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ucgt().size() > 0) {

    ucgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ucgt_);
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
}

void XmsgImGroupObjInfoQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupObjInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupObjInfoQueryRsp::CopyFrom(const XmsgImGroupObjInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupObjInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupObjInfoQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupObjInfoQueryRsp::Swap(XmsgImGroupObjInfoQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupObjInfoQueryRsp::InternalSwap(XmsgImGroupObjInfoQueryRsp* other) {
  using std::swap;
  ucgt_.Swap(&other->ucgt_);
  swap(gts_, other->gts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupObjInfoQueryRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImClientDeviceInfo_ExtEntry_DoNotUse::XmsgImClientDeviceInfo_ExtEntry_DoNotUse() {}
XmsgImClientDeviceInfo_ExtEntry_DoNotUse::XmsgImClientDeviceInfo_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImClientDeviceInfo_ExtEntry_DoNotUse::MergeFrom(const XmsgImClientDeviceInfo_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImClientDeviceInfo_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[8];
}
void XmsgImClientDeviceInfo_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImClientDeviceInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImClientDeviceInfo::kPlatFieldNumber;
const int XmsgImClientDeviceInfo::kDidFieldNumber;
const int XmsgImClientDeviceInfo::kVerFieldNumber;
const int XmsgImClientDeviceInfo::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImClientDeviceInfo::XmsgImClientDeviceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImClientDeviceInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImClientDeviceInfo)
}
XmsgImClientDeviceInfo::XmsgImClientDeviceInfo(const XmsgImClientDeviceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plat().size() > 0) {
    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.did().size() > 0) {
    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ver().size() > 0) {
    ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ver_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImClientDeviceInfo)
}

void XmsgImClientDeviceInfo::SharedCtor() {
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImClientDeviceInfo::~XmsgImClientDeviceInfo() {
  // @@protoc_insertion_point(destructor:XmsgImClientDeviceInfo)
  SharedDtor();
}

void XmsgImClientDeviceInfo::SharedDtor() {
  plat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImClientDeviceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImClientDeviceInfo::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImClientDeviceInfo& XmsgImClientDeviceInfo::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImClientDeviceInfo();
  return *internal_default_instance();
}

XmsgImClientDeviceInfo* XmsgImClientDeviceInfo::New(::google::protobuf::Arena* arena) const {
  XmsgImClientDeviceInfo* n = new XmsgImClientDeviceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImClientDeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImClientDeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImClientDeviceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImClientDeviceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string plat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plat().data(), static_cast<int>(this->plat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImClientDeviceInfo.plat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string did = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->did().data(), static_cast<int>(this->did().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImClientDeviceInfo.did"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ver = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ver().data(), static_cast<int>(this->ver().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImClientDeviceInfo.ver"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          XmsgImClientDeviceInfo_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImClientDeviceInfo_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImClientDeviceInfo.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImClientDeviceInfo.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImClientDeviceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImClientDeviceInfo)
  return false;
#undef DO_
}

void XmsgImClientDeviceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImClientDeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string plat = 1;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImClientDeviceInfo.plat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->plat(), output);
  }

  // string did = 2;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImClientDeviceInfo.did");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->did(), output);
  }

  // string ver = 3;
  if (this->ver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ver().data(), static_cast<int>(this->ver().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImClientDeviceInfo.ver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ver(), output);
  }

  // map<string, string> ext = 4;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImClientDeviceInfo.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImClientDeviceInfo.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImClientDeviceInfo_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImClientDeviceInfo_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImClientDeviceInfo)
}

::google::protobuf::uint8* XmsgImClientDeviceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImClientDeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string plat = 1;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImClientDeviceInfo.plat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->plat(), target);
  }

  // string did = 2;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImClientDeviceInfo.did");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->did(), target);
  }

  // string ver = 3;
  if (this->ver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ver().data(), static_cast<int>(this->ver().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImClientDeviceInfo.ver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ver(), target);
  }

  // map<string, string> ext = 4;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImClientDeviceInfo.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImClientDeviceInfo.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImClientDeviceInfo_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImClientDeviceInfo_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImClientDeviceInfo)
  return target;
}

size_t XmsgImClientDeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImClientDeviceInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImClientDeviceInfo_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string plat = 1;
  if (this->plat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plat());
  }

  // string did = 2;
  if (this->did().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->did());
  }

  // string ver = 3;
  if (this->ver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImClientDeviceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImClientDeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImClientDeviceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImClientDeviceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImClientDeviceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImClientDeviceInfo)
    MergeFrom(*source);
  }
}

void XmsgImClientDeviceInfo::MergeFrom(const XmsgImClientDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImClientDeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.plat().size() > 0) {

    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  if (from.did().size() > 0) {

    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  if (from.ver().size() > 0) {

    ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ver_);
  }
}

void XmsgImClientDeviceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImClientDeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImClientDeviceInfo::CopyFrom(const XmsgImClientDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImClientDeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImClientDeviceInfo::IsInitialized() const {
  return true;
}

void XmsgImClientDeviceInfo::Swap(XmsgImClientDeviceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImClientDeviceInfo::InternalSwap(XmsgImClientDeviceInfo* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  plat_.Swap(&other->plat_);
  did_.Swap(&other->did_);
  ver_.Swap(&other->ver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImClientDeviceInfo::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2doss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2doss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
