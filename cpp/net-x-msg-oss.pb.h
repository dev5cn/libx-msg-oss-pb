// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-oss.proto

#ifndef PROTOBUF_net_2dx_2dmsg_2doss_2eproto__INCLUDED
#define PROTOBUF_net_2dx_2dmsg_2doss_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_net_2dx_2dmsg_2doss_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgOssUploadSimpleReq_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgOssUploadSimpleReq_ExtEntry_DoNotUse();
void InitDefaultsXmsgOssUploadSimpleReqImpl();
void InitDefaultsXmsgOssUploadSimpleReq();
void InitDefaultsXmsgOssUploadSimpleRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgOssUploadSimpleRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgOssUploadSimpleRspImpl();
void InitDefaultsXmsgOssUploadSimpleRsp();
void InitDefaultsXmsgOssDownloadSimpleReq_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgOssDownloadSimpleReq_ExtEntry_DoNotUse();
void InitDefaultsXmsgOssDownloadSimpleReqImpl();
void InitDefaultsXmsgOssDownloadSimpleReq();
void InitDefaultsXmsgOssDownloadSimpleRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgOssDownloadSimpleRspImpl();
void InitDefaultsXmsgOssDownloadSimpleRsp();
void InitDefaultsXmsgOssUsrObjInfoQueryReqImpl();
void InitDefaultsXmsgOssUsrObjInfoQueryReq();
void InitDefaultsXmsgOssUsrObjInfoQueryRspImpl();
void InitDefaultsXmsgOssUsrObjInfoQueryRsp();
void InitDefaultsXmsgOssUsrObjInfoImpl();
void InitDefaultsXmsgOssUsrObjInfo();
void InitDefaultsXmsgClientTokenInfoImpl();
void InitDefaultsXmsgClientTokenInfo();
inline void InitDefaults() {
  InitDefaultsXmsgOssUploadSimpleReq_ExtEntry_DoNotUse();
  InitDefaultsXmsgOssUploadSimpleReq();
  InitDefaultsXmsgOssUploadSimpleRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgOssUploadSimpleRsp();
  InitDefaultsXmsgOssDownloadSimpleReq_ExtEntry_DoNotUse();
  InitDefaultsXmsgOssDownloadSimpleReq();
  InitDefaultsXmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgOssDownloadSimpleRsp();
  InitDefaultsXmsgOssUsrObjInfoQueryReq();
  InitDefaultsXmsgOssUsrObjInfoQueryRsp();
  InitDefaultsXmsgOssUsrObjInfo();
  InitDefaultsXmsgClientTokenInfo();
}
}  // namespace protobuf_net_2dx_2dmsg_2doss_2eproto
class XmsgClientTokenInfo;
class XmsgClientTokenInfoDefaultTypeInternal;
extern XmsgClientTokenInfoDefaultTypeInternal _XmsgClientTokenInfo_default_instance_;
class XmsgOssDownloadSimpleReq;
class XmsgOssDownloadSimpleReqDefaultTypeInternal;
extern XmsgOssDownloadSimpleReqDefaultTypeInternal _XmsgOssDownloadSimpleReq_default_instance_;
class XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse;
class XmsgOssDownloadSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgOssDownloadSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal _XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse_default_instance_;
class XmsgOssDownloadSimpleRsp;
class XmsgOssDownloadSimpleRspDefaultTypeInternal;
extern XmsgOssDownloadSimpleRspDefaultTypeInternal _XmsgOssDownloadSimpleRsp_default_instance_;
class XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse;
class XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgOssUploadSimpleReq;
class XmsgOssUploadSimpleReqDefaultTypeInternal;
extern XmsgOssUploadSimpleReqDefaultTypeInternal _XmsgOssUploadSimpleReq_default_instance_;
class XmsgOssUploadSimpleReq_ExtEntry_DoNotUse;
class XmsgOssUploadSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgOssUploadSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal _XmsgOssUploadSimpleReq_ExtEntry_DoNotUse_default_instance_;
class XmsgOssUploadSimpleRsp;
class XmsgOssUploadSimpleRspDefaultTypeInternal;
extern XmsgOssUploadSimpleRspDefaultTypeInternal _XmsgOssUploadSimpleRsp_default_instance_;
class XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse;
class XmsgOssUploadSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgOssUploadSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgOssUsrObjInfo;
class XmsgOssUsrObjInfoDefaultTypeInternal;
extern XmsgOssUsrObjInfoDefaultTypeInternal _XmsgOssUsrObjInfo_default_instance_;
class XmsgOssUsrObjInfoQueryReq;
class XmsgOssUsrObjInfoQueryReqDefaultTypeInternal;
extern XmsgOssUsrObjInfoQueryReqDefaultTypeInternal _XmsgOssUsrObjInfoQueryReq_default_instance_;
class XmsgOssUsrObjInfoQueryRsp;
class XmsgOssUsrObjInfoQueryRspDefaultTypeInternal;
extern XmsgOssUsrObjInfoQueryRspDefaultTypeInternal _XmsgOssUsrObjInfoQueryRsp_default_instance_;

// ===================================================================

class XmsgOssUploadSimpleReq_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgOssUploadSimpleReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgOssUploadSimpleReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgOssUploadSimpleReq_ExtEntry_DoNotUse();
  XmsgOssUploadSimpleReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgOssUploadSimpleReq_ExtEntry_DoNotUse& other);
  static const XmsgOssUploadSimpleReq_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgOssUploadSimpleReq_ExtEntry_DoNotUse*>(&_XmsgOssUploadSimpleReq_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgOssUploadSimpleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgOssUploadSimpleReq) */ {
 public:
  XmsgOssUploadSimpleReq();
  virtual ~XmsgOssUploadSimpleReq();

  XmsgOssUploadSimpleReq(const XmsgOssUploadSimpleReq& from);

  inline XmsgOssUploadSimpleReq& operator=(const XmsgOssUploadSimpleReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgOssUploadSimpleReq(XmsgOssUploadSimpleReq&& from) noexcept
    : XmsgOssUploadSimpleReq() {
    *this = ::std::move(from);
  }

  inline XmsgOssUploadSimpleReq& operator=(XmsgOssUploadSimpleReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgOssUploadSimpleReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgOssUploadSimpleReq* internal_default_instance() {
    return reinterpret_cast<const XmsgOssUploadSimpleReq*>(
               &_XmsgOssUploadSimpleReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(XmsgOssUploadSimpleReq* other);
  friend void swap(XmsgOssUploadSimpleReq& a, XmsgOssUploadSimpleReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgOssUploadSimpleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgOssUploadSimpleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgOssUploadSimpleReq& from);
  void MergeFrom(const XmsgOssUploadSimpleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgOssUploadSimpleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 3;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string objName = 1;
  void clear_objname();
  static const int kObjNameFieldNumber = 1;
  const ::std::string& objname() const;
  void set_objname(const ::std::string& value);
  #if LANG_CXX11
  void set_objname(::std::string&& value);
  #endif
  void set_objname(const char* value);
  void set_objname(const char* value, size_t size);
  ::std::string* mutable_objname();
  ::std::string* release_objname();
  void set_allocated_objname(::std::string* objname);

  // uint64 objSize = 2;
  void clear_objsize();
  static const int kObjSizeFieldNumber = 2;
  ::google::protobuf::uint64 objsize() const;
  void set_objsize(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgOssUploadSimpleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgOssUploadSimpleReq_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr objname_;
  ::google::protobuf::uint64 objsize_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUploadSimpleReqImpl();
};
// -------------------------------------------------------------------

class XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse();
  XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse& other);
  static const XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse*>(&_XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgOssUploadSimpleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgOssUploadSimpleRsp) */ {
 public:
  XmsgOssUploadSimpleRsp();
  virtual ~XmsgOssUploadSimpleRsp();

  XmsgOssUploadSimpleRsp(const XmsgOssUploadSimpleRsp& from);

  inline XmsgOssUploadSimpleRsp& operator=(const XmsgOssUploadSimpleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgOssUploadSimpleRsp(XmsgOssUploadSimpleRsp&& from) noexcept
    : XmsgOssUploadSimpleRsp() {
    *this = ::std::move(from);
  }

  inline XmsgOssUploadSimpleRsp& operator=(XmsgOssUploadSimpleRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgOssUploadSimpleRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgOssUploadSimpleRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgOssUploadSimpleRsp*>(
               &_XmsgOssUploadSimpleRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(XmsgOssUploadSimpleRsp* other);
  friend void swap(XmsgOssUploadSimpleRsp& a, XmsgOssUploadSimpleRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgOssUploadSimpleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgOssUploadSimpleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgOssUploadSimpleRsp& from);
  void MergeFrom(const XmsgOssUploadSimpleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgOssUploadSimpleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 3;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string oid = 1;
  void clear_oid();
  static const int kOidFieldNumber = 1;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  #if LANG_CXX11
  void set_oid(::std::string&& value);
  #endif
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // string hashVal = 2;
  void clear_hashval();
  static const int kHashValFieldNumber = 2;
  const ::std::string& hashval() const;
  void set_hashval(const ::std::string& value);
  #if LANG_CXX11
  void set_hashval(::std::string&& value);
  #endif
  void set_hashval(const char* value);
  void set_hashval(const char* value, size_t size);
  ::std::string* mutable_hashval();
  ::std::string* release_hashval();
  void set_allocated_hashval(::std::string* hashval);

  // @@protoc_insertion_point(class_scope:XmsgOssUploadSimpleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgOssUploadSimpleRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  ::google::protobuf::internal::ArenaStringPtr hashval_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUploadSimpleRspImpl();
};
// -------------------------------------------------------------------

class XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse();
  XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse& other);
  static const XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse*>(&_XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgOssDownloadSimpleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgOssDownloadSimpleReq) */ {
 public:
  XmsgOssDownloadSimpleReq();
  virtual ~XmsgOssDownloadSimpleReq();

  XmsgOssDownloadSimpleReq(const XmsgOssDownloadSimpleReq& from);

  inline XmsgOssDownloadSimpleReq& operator=(const XmsgOssDownloadSimpleReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgOssDownloadSimpleReq(XmsgOssDownloadSimpleReq&& from) noexcept
    : XmsgOssDownloadSimpleReq() {
    *this = ::std::move(from);
  }

  inline XmsgOssDownloadSimpleReq& operator=(XmsgOssDownloadSimpleReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgOssDownloadSimpleReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgOssDownloadSimpleReq* internal_default_instance() {
    return reinterpret_cast<const XmsgOssDownloadSimpleReq*>(
               &_XmsgOssDownloadSimpleReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(XmsgOssDownloadSimpleReq* other);
  friend void swap(XmsgOssDownloadSimpleReq& a, XmsgOssDownloadSimpleReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgOssDownloadSimpleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgOssDownloadSimpleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgOssDownloadSimpleReq& from);
  void MergeFrom(const XmsgOssDownloadSimpleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgOssDownloadSimpleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 5;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string oid = 1;
  void clear_oid();
  static const int kOidFieldNumber = 1;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  #if LANG_CXX11
  void set_oid(::std::string&& value);
  #endif
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // string cgt = 2;
  void clear_cgt();
  static const int kCgtFieldNumber = 2;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // uint64 offset = 3;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // uint64 len = 4;
  void clear_len();
  static const int kLenFieldNumber = 4;
  ::google::protobuf::uint64 len() const;
  void set_len(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgOssDownloadSimpleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgOssDownloadSimpleReq_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::uint64 len_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssDownloadSimpleReqImpl();
};
// -------------------------------------------------------------------

class XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse();
  XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse& other);
  static const XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse*>(&_XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgOssDownloadSimpleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgOssDownloadSimpleRsp) */ {
 public:
  XmsgOssDownloadSimpleRsp();
  virtual ~XmsgOssDownloadSimpleRsp();

  XmsgOssDownloadSimpleRsp(const XmsgOssDownloadSimpleRsp& from);

  inline XmsgOssDownloadSimpleRsp& operator=(const XmsgOssDownloadSimpleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgOssDownloadSimpleRsp(XmsgOssDownloadSimpleRsp&& from) noexcept
    : XmsgOssDownloadSimpleRsp() {
    *this = ::std::move(from);
  }

  inline XmsgOssDownloadSimpleRsp& operator=(XmsgOssDownloadSimpleRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgOssDownloadSimpleRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgOssDownloadSimpleRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgOssDownloadSimpleRsp*>(
               &_XmsgOssDownloadSimpleRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(XmsgOssDownloadSimpleRsp* other);
  friend void swap(XmsgOssDownloadSimpleRsp& a, XmsgOssDownloadSimpleRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgOssDownloadSimpleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgOssDownloadSimpleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgOssDownloadSimpleRsp& from);
  void MergeFrom(const XmsgOssDownloadSimpleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgOssDownloadSimpleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 5;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string objName = 1;
  void clear_objname();
  static const int kObjNameFieldNumber = 1;
  const ::std::string& objname() const;
  void set_objname(const ::std::string& value);
  #if LANG_CXX11
  void set_objname(::std::string&& value);
  #endif
  void set_objname(const char* value);
  void set_objname(const char* value, size_t size);
  ::std::string* mutable_objname();
  ::std::string* release_objname();
  void set_allocated_objname(::std::string* objname);

  // string hashVal = 3;
  void clear_hashval();
  static const int kHashValFieldNumber = 3;
  const ::std::string& hashval() const;
  void set_hashval(const ::std::string& value);
  #if LANG_CXX11
  void set_hashval(::std::string&& value);
  #endif
  void set_hashval(const char* value);
  void set_hashval(const char* value, size_t size);
  ::std::string* mutable_hashval();
  ::std::string* release_hashval();
  void set_allocated_hashval(::std::string* hashval);

  // uint64 objSize = 2;
  void clear_objsize();
  static const int kObjSizeFieldNumber = 2;
  ::google::protobuf::uint64 objsize() const;
  void set_objsize(::google::protobuf::uint64 value);

  // uint64 gts = 4;
  void clear_gts();
  static const int kGtsFieldNumber = 4;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgOssDownloadSimpleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgOssDownloadSimpleRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr objname_;
  ::google::protobuf::internal::ArenaStringPtr hashval_;
  ::google::protobuf::uint64 objsize_;
  ::google::protobuf::uint64 gts_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssDownloadSimpleRspImpl();
};
// -------------------------------------------------------------------

class XmsgOssUsrObjInfoQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgOssUsrObjInfoQueryReq) */ {
 public:
  XmsgOssUsrObjInfoQueryReq();
  virtual ~XmsgOssUsrObjInfoQueryReq();

  XmsgOssUsrObjInfoQueryReq(const XmsgOssUsrObjInfoQueryReq& from);

  inline XmsgOssUsrObjInfoQueryReq& operator=(const XmsgOssUsrObjInfoQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgOssUsrObjInfoQueryReq(XmsgOssUsrObjInfoQueryReq&& from) noexcept
    : XmsgOssUsrObjInfoQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgOssUsrObjInfoQueryReq& operator=(XmsgOssUsrObjInfoQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgOssUsrObjInfoQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgOssUsrObjInfoQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgOssUsrObjInfoQueryReq*>(
               &_XmsgOssUsrObjInfoQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(XmsgOssUsrObjInfoQueryReq* other);
  friend void swap(XmsgOssUsrObjInfoQueryReq& a, XmsgOssUsrObjInfoQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgOssUsrObjInfoQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgOssUsrObjInfoQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgOssUsrObjInfoQueryReq& from);
  void MergeFrom(const XmsgOssUsrObjInfoQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgOssUsrObjInfoQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 sts = 1;
  void clear_sts();
  static const int kStsFieldNumber = 1;
  ::google::protobuf::uint64 sts() const;
  void set_sts(::google::protobuf::uint64 value);

  // uint64 ets = 2;
  void clear_ets();
  static const int kEtsFieldNumber = 2;
  ::google::protobuf::uint64 ets() const;
  void set_ets(::google::protobuf::uint64 value);

  // uint32 page = 3;
  void clear_page();
  static const int kPageFieldNumber = 3;
  ::google::protobuf::uint32 page() const;
  void set_page(::google::protobuf::uint32 value);

  // uint32 pageSize = 4;
  void clear_pagesize();
  static const int kPageSizeFieldNumber = 4;
  ::google::protobuf::uint32 pagesize() const;
  void set_pagesize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XmsgOssUsrObjInfoQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 sts_;
  ::google::protobuf::uint64 ets_;
  ::google::protobuf::uint32 page_;
  ::google::protobuf::uint32 pagesize_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUsrObjInfoQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgOssUsrObjInfoQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgOssUsrObjInfoQueryRsp) */ {
 public:
  XmsgOssUsrObjInfoQueryRsp();
  virtual ~XmsgOssUsrObjInfoQueryRsp();

  XmsgOssUsrObjInfoQueryRsp(const XmsgOssUsrObjInfoQueryRsp& from);

  inline XmsgOssUsrObjInfoQueryRsp& operator=(const XmsgOssUsrObjInfoQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgOssUsrObjInfoQueryRsp(XmsgOssUsrObjInfoQueryRsp&& from) noexcept
    : XmsgOssUsrObjInfoQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgOssUsrObjInfoQueryRsp& operator=(XmsgOssUsrObjInfoQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgOssUsrObjInfoQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgOssUsrObjInfoQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgOssUsrObjInfoQueryRsp*>(
               &_XmsgOssUsrObjInfoQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(XmsgOssUsrObjInfoQueryRsp* other);
  friend void swap(XmsgOssUsrObjInfoQueryRsp& a, XmsgOssUsrObjInfoQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgOssUsrObjInfoQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgOssUsrObjInfoQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgOssUsrObjInfoQueryRsp& from);
  void MergeFrom(const XmsgOssUsrObjInfoQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgOssUsrObjInfoQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XmsgOssUsrObjInfo objInfo = 1;
  int objinfo_size() const;
  void clear_objinfo();
  static const int kObjInfoFieldNumber = 1;
  const ::XmsgOssUsrObjInfo& objinfo(int index) const;
  ::XmsgOssUsrObjInfo* mutable_objinfo(int index);
  ::XmsgOssUsrObjInfo* add_objinfo();
  ::google::protobuf::RepeatedPtrField< ::XmsgOssUsrObjInfo >*
      mutable_objinfo();
  const ::google::protobuf::RepeatedPtrField< ::XmsgOssUsrObjInfo >&
      objinfo() const;

  // @@protoc_insertion_point(class_scope:XmsgOssUsrObjInfoQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XmsgOssUsrObjInfo > objinfo_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUsrObjInfoQueryRspImpl();
};
// -------------------------------------------------------------------

class XmsgOssUsrObjInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgOssUsrObjInfo) */ {
 public:
  XmsgOssUsrObjInfo();
  virtual ~XmsgOssUsrObjInfo();

  XmsgOssUsrObjInfo(const XmsgOssUsrObjInfo& from);

  inline XmsgOssUsrObjInfo& operator=(const XmsgOssUsrObjInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgOssUsrObjInfo(XmsgOssUsrObjInfo&& from) noexcept
    : XmsgOssUsrObjInfo() {
    *this = ::std::move(from);
  }

  inline XmsgOssUsrObjInfo& operator=(XmsgOssUsrObjInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgOssUsrObjInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgOssUsrObjInfo* internal_default_instance() {
    return reinterpret_cast<const XmsgOssUsrObjInfo*>(
               &_XmsgOssUsrObjInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(XmsgOssUsrObjInfo* other);
  friend void swap(XmsgOssUsrObjInfo& a, XmsgOssUsrObjInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgOssUsrObjInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgOssUsrObjInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgOssUsrObjInfo& from);
  void MergeFrom(const XmsgOssUsrObjInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgOssUsrObjInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string oid = 1;
  void clear_oid();
  static const int kOidFieldNumber = 1;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  #if LANG_CXX11
  void set_oid(::std::string&& value);
  #endif
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // string objName = 2;
  void clear_objname();
  static const int kObjNameFieldNumber = 2;
  const ::std::string& objname() const;
  void set_objname(const ::std::string& value);
  #if LANG_CXX11
  void set_objname(::std::string&& value);
  #endif
  void set_objname(const char* value);
  void set_objname(const char* value, size_t size);
  ::std::string* mutable_objname();
  ::std::string* release_objname();
  void set_allocated_objname(::std::string* objname);

  // string hashVal = 4;
  void clear_hashval();
  static const int kHashValFieldNumber = 4;
  const ::std::string& hashval() const;
  void set_hashval(const ::std::string& value);
  #if LANG_CXX11
  void set_hashval(::std::string&& value);
  #endif
  void set_hashval(const char* value);
  void set_hashval(const char* value, size_t size);
  ::std::string* mutable_hashval();
  ::std::string* release_hashval();
  void set_allocated_hashval(::std::string* hashval);

  // uint64 objSize = 3;
  void clear_objsize();
  static const int kObjSizeFieldNumber = 3;
  ::google::protobuf::uint64 objsize() const;
  void set_objsize(::google::protobuf::uint64 value);

  // uint64 gts = 5;
  void clear_gts();
  static const int kGtsFieldNumber = 5;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgOssUsrObjInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  ::google::protobuf::internal::ArenaStringPtr objname_;
  ::google::protobuf::internal::ArenaStringPtr hashval_;
  ::google::protobuf::uint64 objsize_;
  ::google::protobuf::uint64 gts_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssUsrObjInfoImpl();
};
// -------------------------------------------------------------------

class XmsgClientTokenInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgClientTokenInfo) */ {
 public:
  XmsgClientTokenInfo();
  virtual ~XmsgClientTokenInfo();

  XmsgClientTokenInfo(const XmsgClientTokenInfo& from);

  inline XmsgClientTokenInfo& operator=(const XmsgClientTokenInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgClientTokenInfo(XmsgClientTokenInfo&& from) noexcept
    : XmsgClientTokenInfo() {
    *this = ::std::move(from);
  }

  inline XmsgClientTokenInfo& operator=(XmsgClientTokenInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgClientTokenInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgClientTokenInfo* internal_default_instance() {
    return reinterpret_cast<const XmsgClientTokenInfo*>(
               &_XmsgClientTokenInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(XmsgClientTokenInfo* other);
  friend void swap(XmsgClientTokenInfo& a, XmsgClientTokenInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgClientTokenInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgClientTokenInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgClientTokenInfo& from);
  void MergeFrom(const XmsgClientTokenInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgClientTokenInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string alg = 3;
  void clear_alg();
  static const int kAlgFieldNumber = 3;
  const ::std::string& alg() const;
  void set_alg(const ::std::string& value);
  #if LANG_CXX11
  void set_alg(::std::string&& value);
  #endif
  void set_alg(const char* value);
  void set_alg(const char* value, size_t size);
  ::std::string* mutable_alg();
  ::std::string* release_alg();
  void set_allocated_alg(::std::string* alg);

  // string slat = 4;
  void clear_slat();
  static const int kSlatFieldNumber = 4;
  const ::std::string& slat() const;
  void set_slat(const ::std::string& value);
  #if LANG_CXX11
  void set_slat(::std::string&& value);
  #endif
  void set_slat(const char* value);
  void set_slat(const char* value, size_t size);
  ::std::string* mutable_slat();
  ::std::string* release_slat();
  void set_allocated_slat(::std::string* slat);

  // string plat = 5;
  void clear_plat();
  static const int kPlatFieldNumber = 5;
  const ::std::string& plat() const;
  void set_plat(const ::std::string& value);
  #if LANG_CXX11
  void set_plat(::std::string&& value);
  #endif
  void set_plat(const char* value);
  void set_plat(const char* value, size_t size);
  ::std::string* mutable_plat();
  ::std::string* release_plat();
  void set_allocated_plat(::std::string* plat);

  // string did = 6;
  void clear_did();
  static const int kDidFieldNumber = 6;
  const ::std::string& did() const;
  void set_did(const ::std::string& value);
  #if LANG_CXX11
  void set_did(::std::string&& value);
  #endif
  void set_did(const char* value);
  void set_did(const char* value, size_t size);
  ::std::string* mutable_did();
  ::std::string* release_did();
  void set_allocated_did(::std::string* did);

  // string sign = 7;
  void clear_sign();
  static const int kSignFieldNumber = 7;
  const ::std::string& sign() const;
  void set_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_sign(::std::string&& value);
  #endif
  void set_sign(const char* value);
  void set_sign(const char* value, size_t size);
  ::std::string* mutable_sign();
  ::std::string* release_sign();
  void set_allocated_sign(::std::string* sign);

  // @@protoc_insertion_point(class_scope:XmsgClientTokenInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr alg_;
  ::google::protobuf::internal::ArenaStringPtr slat_;
  ::google::protobuf::internal::ArenaStringPtr plat_;
  ::google::protobuf::internal::ArenaStringPtr did_;
  ::google::protobuf::internal::ArenaStringPtr sign_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgClientTokenInfoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// XmsgOssUploadSimpleReq

// string objName = 1;
inline void XmsgOssUploadSimpleReq::clear_objname() {
  objname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssUploadSimpleReq::objname() const {
  // @@protoc_insertion_point(field_get:XmsgOssUploadSimpleReq.objName)
  return objname_.GetNoArena();
}
inline void XmsgOssUploadSimpleReq::set_objname(const ::std::string& value) {
  
  objname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssUploadSimpleReq.objName)
}
#if LANG_CXX11
inline void XmsgOssUploadSimpleReq::set_objname(::std::string&& value) {
  
  objname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssUploadSimpleReq.objName)
}
#endif
inline void XmsgOssUploadSimpleReq::set_objname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  objname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssUploadSimpleReq.objName)
}
inline void XmsgOssUploadSimpleReq::set_objname(const char* value, size_t size) {
  
  objname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssUploadSimpleReq.objName)
}
inline ::std::string* XmsgOssUploadSimpleReq::mutable_objname() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssUploadSimpleReq.objName)
  return objname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssUploadSimpleReq::release_objname() {
  // @@protoc_insertion_point(field_release:XmsgOssUploadSimpleReq.objName)
  
  return objname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssUploadSimpleReq::set_allocated_objname(::std::string* objname) {
  if (objname != NULL) {
    
  } else {
    
  }
  objname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), objname);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssUploadSimpleReq.objName)
}

// uint64 objSize = 2;
inline void XmsgOssUploadSimpleReq::clear_objsize() {
  objsize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgOssUploadSimpleReq::objsize() const {
  // @@protoc_insertion_point(field_get:XmsgOssUploadSimpleReq.objSize)
  return objsize_;
}
inline void XmsgOssUploadSimpleReq::set_objsize(::google::protobuf::uint64 value) {
  
  objsize_ = value;
  // @@protoc_insertion_point(field_set:XmsgOssUploadSimpleReq.objSize)
}

// map<string, string> ext = 3;
inline int XmsgOssUploadSimpleReq::ext_size() const {
  return ext_.size();
}
inline void XmsgOssUploadSimpleReq::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgOssUploadSimpleReq::ext() const {
  // @@protoc_insertion_point(field_map:XmsgOssUploadSimpleReq.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgOssUploadSimpleReq::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgOssUploadSimpleReq.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgOssUploadSimpleRsp

// string oid = 1;
inline void XmsgOssUploadSimpleRsp::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssUploadSimpleRsp::oid() const {
  // @@protoc_insertion_point(field_get:XmsgOssUploadSimpleRsp.oid)
  return oid_.GetNoArena();
}
inline void XmsgOssUploadSimpleRsp::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssUploadSimpleRsp.oid)
}
#if LANG_CXX11
inline void XmsgOssUploadSimpleRsp::set_oid(::std::string&& value) {
  
  oid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssUploadSimpleRsp.oid)
}
#endif
inline void XmsgOssUploadSimpleRsp::set_oid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssUploadSimpleRsp.oid)
}
inline void XmsgOssUploadSimpleRsp::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssUploadSimpleRsp.oid)
}
inline ::std::string* XmsgOssUploadSimpleRsp::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssUploadSimpleRsp.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssUploadSimpleRsp::release_oid() {
  // @@protoc_insertion_point(field_release:XmsgOssUploadSimpleRsp.oid)
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssUploadSimpleRsp::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssUploadSimpleRsp.oid)
}

// string hashVal = 2;
inline void XmsgOssUploadSimpleRsp::clear_hashval() {
  hashval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssUploadSimpleRsp::hashval() const {
  // @@protoc_insertion_point(field_get:XmsgOssUploadSimpleRsp.hashVal)
  return hashval_.GetNoArena();
}
inline void XmsgOssUploadSimpleRsp::set_hashval(const ::std::string& value) {
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssUploadSimpleRsp.hashVal)
}
#if LANG_CXX11
inline void XmsgOssUploadSimpleRsp::set_hashval(::std::string&& value) {
  
  hashval_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssUploadSimpleRsp.hashVal)
}
#endif
inline void XmsgOssUploadSimpleRsp::set_hashval(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssUploadSimpleRsp.hashVal)
}
inline void XmsgOssUploadSimpleRsp::set_hashval(const char* value, size_t size) {
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssUploadSimpleRsp.hashVal)
}
inline ::std::string* XmsgOssUploadSimpleRsp::mutable_hashval() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssUploadSimpleRsp.hashVal)
  return hashval_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssUploadSimpleRsp::release_hashval() {
  // @@protoc_insertion_point(field_release:XmsgOssUploadSimpleRsp.hashVal)
  
  return hashval_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssUploadSimpleRsp::set_allocated_hashval(::std::string* hashval) {
  if (hashval != NULL) {
    
  } else {
    
  }
  hashval_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashval);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssUploadSimpleRsp.hashVal)
}

// map<string, string> ext = 3;
inline int XmsgOssUploadSimpleRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgOssUploadSimpleRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgOssUploadSimpleRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgOssUploadSimpleRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgOssUploadSimpleRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgOssUploadSimpleRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgOssDownloadSimpleReq

// string oid = 1;
inline void XmsgOssDownloadSimpleReq::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssDownloadSimpleReq::oid() const {
  // @@protoc_insertion_point(field_get:XmsgOssDownloadSimpleReq.oid)
  return oid_.GetNoArena();
}
inline void XmsgOssDownloadSimpleReq::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssDownloadSimpleReq.oid)
}
#if LANG_CXX11
inline void XmsgOssDownloadSimpleReq::set_oid(::std::string&& value) {
  
  oid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssDownloadSimpleReq.oid)
}
#endif
inline void XmsgOssDownloadSimpleReq::set_oid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssDownloadSimpleReq.oid)
}
inline void XmsgOssDownloadSimpleReq::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssDownloadSimpleReq.oid)
}
inline ::std::string* XmsgOssDownloadSimpleReq::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssDownloadSimpleReq.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssDownloadSimpleReq::release_oid() {
  // @@protoc_insertion_point(field_release:XmsgOssDownloadSimpleReq.oid)
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssDownloadSimpleReq::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssDownloadSimpleReq.oid)
}

// string cgt = 2;
inline void XmsgOssDownloadSimpleReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssDownloadSimpleReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgOssDownloadSimpleReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgOssDownloadSimpleReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssDownloadSimpleReq.cgt)
}
#if LANG_CXX11
inline void XmsgOssDownloadSimpleReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssDownloadSimpleReq.cgt)
}
#endif
inline void XmsgOssDownloadSimpleReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssDownloadSimpleReq.cgt)
}
inline void XmsgOssDownloadSimpleReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssDownloadSimpleReq.cgt)
}
inline ::std::string* XmsgOssDownloadSimpleReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssDownloadSimpleReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssDownloadSimpleReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgOssDownloadSimpleReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssDownloadSimpleReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssDownloadSimpleReq.cgt)
}

// uint64 offset = 3;
inline void XmsgOssDownloadSimpleReq::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgOssDownloadSimpleReq::offset() const {
  // @@protoc_insertion_point(field_get:XmsgOssDownloadSimpleReq.offset)
  return offset_;
}
inline void XmsgOssDownloadSimpleReq::set_offset(::google::protobuf::uint64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:XmsgOssDownloadSimpleReq.offset)
}

// uint64 len = 4;
inline void XmsgOssDownloadSimpleReq::clear_len() {
  len_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgOssDownloadSimpleReq::len() const {
  // @@protoc_insertion_point(field_get:XmsgOssDownloadSimpleReq.len)
  return len_;
}
inline void XmsgOssDownloadSimpleReq::set_len(::google::protobuf::uint64 value) {
  
  len_ = value;
  // @@protoc_insertion_point(field_set:XmsgOssDownloadSimpleReq.len)
}

// map<string, string> ext = 5;
inline int XmsgOssDownloadSimpleReq::ext_size() const {
  return ext_.size();
}
inline void XmsgOssDownloadSimpleReq::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgOssDownloadSimpleReq::ext() const {
  // @@protoc_insertion_point(field_map:XmsgOssDownloadSimpleReq.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgOssDownloadSimpleReq::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgOssDownloadSimpleReq.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgOssDownloadSimpleRsp

// string objName = 1;
inline void XmsgOssDownloadSimpleRsp::clear_objname() {
  objname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssDownloadSimpleRsp::objname() const {
  // @@protoc_insertion_point(field_get:XmsgOssDownloadSimpleRsp.objName)
  return objname_.GetNoArena();
}
inline void XmsgOssDownloadSimpleRsp::set_objname(const ::std::string& value) {
  
  objname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssDownloadSimpleRsp.objName)
}
#if LANG_CXX11
inline void XmsgOssDownloadSimpleRsp::set_objname(::std::string&& value) {
  
  objname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssDownloadSimpleRsp.objName)
}
#endif
inline void XmsgOssDownloadSimpleRsp::set_objname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  objname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssDownloadSimpleRsp.objName)
}
inline void XmsgOssDownloadSimpleRsp::set_objname(const char* value, size_t size) {
  
  objname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssDownloadSimpleRsp.objName)
}
inline ::std::string* XmsgOssDownloadSimpleRsp::mutable_objname() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssDownloadSimpleRsp.objName)
  return objname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssDownloadSimpleRsp::release_objname() {
  // @@protoc_insertion_point(field_release:XmsgOssDownloadSimpleRsp.objName)
  
  return objname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssDownloadSimpleRsp::set_allocated_objname(::std::string* objname) {
  if (objname != NULL) {
    
  } else {
    
  }
  objname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), objname);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssDownloadSimpleRsp.objName)
}

// uint64 objSize = 2;
inline void XmsgOssDownloadSimpleRsp::clear_objsize() {
  objsize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgOssDownloadSimpleRsp::objsize() const {
  // @@protoc_insertion_point(field_get:XmsgOssDownloadSimpleRsp.objSize)
  return objsize_;
}
inline void XmsgOssDownloadSimpleRsp::set_objsize(::google::protobuf::uint64 value) {
  
  objsize_ = value;
  // @@protoc_insertion_point(field_set:XmsgOssDownloadSimpleRsp.objSize)
}

// string hashVal = 3;
inline void XmsgOssDownloadSimpleRsp::clear_hashval() {
  hashval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssDownloadSimpleRsp::hashval() const {
  // @@protoc_insertion_point(field_get:XmsgOssDownloadSimpleRsp.hashVal)
  return hashval_.GetNoArena();
}
inline void XmsgOssDownloadSimpleRsp::set_hashval(const ::std::string& value) {
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssDownloadSimpleRsp.hashVal)
}
#if LANG_CXX11
inline void XmsgOssDownloadSimpleRsp::set_hashval(::std::string&& value) {
  
  hashval_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssDownloadSimpleRsp.hashVal)
}
#endif
inline void XmsgOssDownloadSimpleRsp::set_hashval(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssDownloadSimpleRsp.hashVal)
}
inline void XmsgOssDownloadSimpleRsp::set_hashval(const char* value, size_t size) {
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssDownloadSimpleRsp.hashVal)
}
inline ::std::string* XmsgOssDownloadSimpleRsp::mutable_hashval() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssDownloadSimpleRsp.hashVal)
  return hashval_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssDownloadSimpleRsp::release_hashval() {
  // @@protoc_insertion_point(field_release:XmsgOssDownloadSimpleRsp.hashVal)
  
  return hashval_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssDownloadSimpleRsp::set_allocated_hashval(::std::string* hashval) {
  if (hashval != NULL) {
    
  } else {
    
  }
  hashval_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashval);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssDownloadSimpleRsp.hashVal)
}

// uint64 gts = 4;
inline void XmsgOssDownloadSimpleRsp::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgOssDownloadSimpleRsp::gts() const {
  // @@protoc_insertion_point(field_get:XmsgOssDownloadSimpleRsp.gts)
  return gts_;
}
inline void XmsgOssDownloadSimpleRsp::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgOssDownloadSimpleRsp.gts)
}

// map<string, string> ext = 5;
inline int XmsgOssDownloadSimpleRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgOssDownloadSimpleRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgOssDownloadSimpleRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgOssDownloadSimpleRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgOssDownloadSimpleRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgOssDownloadSimpleRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgOssUsrObjInfoQueryReq

// uint64 sts = 1;
inline void XmsgOssUsrObjInfoQueryReq::clear_sts() {
  sts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgOssUsrObjInfoQueryReq::sts() const {
  // @@protoc_insertion_point(field_get:XmsgOssUsrObjInfoQueryReq.sts)
  return sts_;
}
inline void XmsgOssUsrObjInfoQueryReq::set_sts(::google::protobuf::uint64 value) {
  
  sts_ = value;
  // @@protoc_insertion_point(field_set:XmsgOssUsrObjInfoQueryReq.sts)
}

// uint64 ets = 2;
inline void XmsgOssUsrObjInfoQueryReq::clear_ets() {
  ets_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgOssUsrObjInfoQueryReq::ets() const {
  // @@protoc_insertion_point(field_get:XmsgOssUsrObjInfoQueryReq.ets)
  return ets_;
}
inline void XmsgOssUsrObjInfoQueryReq::set_ets(::google::protobuf::uint64 value) {
  
  ets_ = value;
  // @@protoc_insertion_point(field_set:XmsgOssUsrObjInfoQueryReq.ets)
}

// uint32 page = 3;
inline void XmsgOssUsrObjInfoQueryReq::clear_page() {
  page_ = 0u;
}
inline ::google::protobuf::uint32 XmsgOssUsrObjInfoQueryReq::page() const {
  // @@protoc_insertion_point(field_get:XmsgOssUsrObjInfoQueryReq.page)
  return page_;
}
inline void XmsgOssUsrObjInfoQueryReq::set_page(::google::protobuf::uint32 value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:XmsgOssUsrObjInfoQueryReq.page)
}

// uint32 pageSize = 4;
inline void XmsgOssUsrObjInfoQueryReq::clear_pagesize() {
  pagesize_ = 0u;
}
inline ::google::protobuf::uint32 XmsgOssUsrObjInfoQueryReq::pagesize() const {
  // @@protoc_insertion_point(field_get:XmsgOssUsrObjInfoQueryReq.pageSize)
  return pagesize_;
}
inline void XmsgOssUsrObjInfoQueryReq::set_pagesize(::google::protobuf::uint32 value) {
  
  pagesize_ = value;
  // @@protoc_insertion_point(field_set:XmsgOssUsrObjInfoQueryReq.pageSize)
}

// -------------------------------------------------------------------

// XmsgOssUsrObjInfoQueryRsp

// repeated .XmsgOssUsrObjInfo objInfo = 1;
inline int XmsgOssUsrObjInfoQueryRsp::objinfo_size() const {
  return objinfo_.size();
}
inline void XmsgOssUsrObjInfoQueryRsp::clear_objinfo() {
  objinfo_.Clear();
}
inline const ::XmsgOssUsrObjInfo& XmsgOssUsrObjInfoQueryRsp::objinfo(int index) const {
  // @@protoc_insertion_point(field_get:XmsgOssUsrObjInfoQueryRsp.objInfo)
  return objinfo_.Get(index);
}
inline ::XmsgOssUsrObjInfo* XmsgOssUsrObjInfoQueryRsp::mutable_objinfo(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgOssUsrObjInfoQueryRsp.objInfo)
  return objinfo_.Mutable(index);
}
inline ::XmsgOssUsrObjInfo* XmsgOssUsrObjInfoQueryRsp::add_objinfo() {
  // @@protoc_insertion_point(field_add:XmsgOssUsrObjInfoQueryRsp.objInfo)
  return objinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgOssUsrObjInfo >*
XmsgOssUsrObjInfoQueryRsp::mutable_objinfo() {
  // @@protoc_insertion_point(field_mutable_list:XmsgOssUsrObjInfoQueryRsp.objInfo)
  return &objinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgOssUsrObjInfo >&
XmsgOssUsrObjInfoQueryRsp::objinfo() const {
  // @@protoc_insertion_point(field_list:XmsgOssUsrObjInfoQueryRsp.objInfo)
  return objinfo_;
}

// -------------------------------------------------------------------

// XmsgOssUsrObjInfo

// string oid = 1;
inline void XmsgOssUsrObjInfo::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssUsrObjInfo::oid() const {
  // @@protoc_insertion_point(field_get:XmsgOssUsrObjInfo.oid)
  return oid_.GetNoArena();
}
inline void XmsgOssUsrObjInfo::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssUsrObjInfo.oid)
}
#if LANG_CXX11
inline void XmsgOssUsrObjInfo::set_oid(::std::string&& value) {
  
  oid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssUsrObjInfo.oid)
}
#endif
inline void XmsgOssUsrObjInfo::set_oid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssUsrObjInfo.oid)
}
inline void XmsgOssUsrObjInfo::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssUsrObjInfo.oid)
}
inline ::std::string* XmsgOssUsrObjInfo::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssUsrObjInfo.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssUsrObjInfo::release_oid() {
  // @@protoc_insertion_point(field_release:XmsgOssUsrObjInfo.oid)
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssUsrObjInfo::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssUsrObjInfo.oid)
}

// string objName = 2;
inline void XmsgOssUsrObjInfo::clear_objname() {
  objname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssUsrObjInfo::objname() const {
  // @@protoc_insertion_point(field_get:XmsgOssUsrObjInfo.objName)
  return objname_.GetNoArena();
}
inline void XmsgOssUsrObjInfo::set_objname(const ::std::string& value) {
  
  objname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssUsrObjInfo.objName)
}
#if LANG_CXX11
inline void XmsgOssUsrObjInfo::set_objname(::std::string&& value) {
  
  objname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssUsrObjInfo.objName)
}
#endif
inline void XmsgOssUsrObjInfo::set_objname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  objname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssUsrObjInfo.objName)
}
inline void XmsgOssUsrObjInfo::set_objname(const char* value, size_t size) {
  
  objname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssUsrObjInfo.objName)
}
inline ::std::string* XmsgOssUsrObjInfo::mutable_objname() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssUsrObjInfo.objName)
  return objname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssUsrObjInfo::release_objname() {
  // @@protoc_insertion_point(field_release:XmsgOssUsrObjInfo.objName)
  
  return objname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssUsrObjInfo::set_allocated_objname(::std::string* objname) {
  if (objname != NULL) {
    
  } else {
    
  }
  objname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), objname);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssUsrObjInfo.objName)
}

// uint64 objSize = 3;
inline void XmsgOssUsrObjInfo::clear_objsize() {
  objsize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgOssUsrObjInfo::objsize() const {
  // @@protoc_insertion_point(field_get:XmsgOssUsrObjInfo.objSize)
  return objsize_;
}
inline void XmsgOssUsrObjInfo::set_objsize(::google::protobuf::uint64 value) {
  
  objsize_ = value;
  // @@protoc_insertion_point(field_set:XmsgOssUsrObjInfo.objSize)
}

// string hashVal = 4;
inline void XmsgOssUsrObjInfo::clear_hashval() {
  hashval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssUsrObjInfo::hashval() const {
  // @@protoc_insertion_point(field_get:XmsgOssUsrObjInfo.hashVal)
  return hashval_.GetNoArena();
}
inline void XmsgOssUsrObjInfo::set_hashval(const ::std::string& value) {
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssUsrObjInfo.hashVal)
}
#if LANG_CXX11
inline void XmsgOssUsrObjInfo::set_hashval(::std::string&& value) {
  
  hashval_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssUsrObjInfo.hashVal)
}
#endif
inline void XmsgOssUsrObjInfo::set_hashval(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssUsrObjInfo.hashVal)
}
inline void XmsgOssUsrObjInfo::set_hashval(const char* value, size_t size) {
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssUsrObjInfo.hashVal)
}
inline ::std::string* XmsgOssUsrObjInfo::mutable_hashval() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssUsrObjInfo.hashVal)
  return hashval_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssUsrObjInfo::release_hashval() {
  // @@protoc_insertion_point(field_release:XmsgOssUsrObjInfo.hashVal)
  
  return hashval_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssUsrObjInfo::set_allocated_hashval(::std::string* hashval) {
  if (hashval != NULL) {
    
  } else {
    
  }
  hashval_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashval);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssUsrObjInfo.hashVal)
}

// uint64 gts = 5;
inline void XmsgOssUsrObjInfo::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgOssUsrObjInfo::gts() const {
  // @@protoc_insertion_point(field_get:XmsgOssUsrObjInfo.gts)
  return gts_;
}
inline void XmsgOssUsrObjInfo::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgOssUsrObjInfo.gts)
}

// -------------------------------------------------------------------

// XmsgClientTokenInfo

// string cgt = 1;
inline void XmsgClientTokenInfo::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgClientTokenInfo::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgClientTokenInfo.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgClientTokenInfo::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgClientTokenInfo.cgt)
}
#if LANG_CXX11
inline void XmsgClientTokenInfo::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgClientTokenInfo.cgt)
}
#endif
inline void XmsgClientTokenInfo::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgClientTokenInfo.cgt)
}
inline void XmsgClientTokenInfo::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgClientTokenInfo.cgt)
}
inline ::std::string* XmsgClientTokenInfo::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgClientTokenInfo.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgClientTokenInfo::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgClientTokenInfo.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgClientTokenInfo::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgClientTokenInfo.cgt)
}

// string token = 2;
inline void XmsgClientTokenInfo::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgClientTokenInfo::token() const {
  // @@protoc_insertion_point(field_get:XmsgClientTokenInfo.token)
  return token_.GetNoArena();
}
inline void XmsgClientTokenInfo::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgClientTokenInfo.token)
}
#if LANG_CXX11
inline void XmsgClientTokenInfo::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgClientTokenInfo.token)
}
#endif
inline void XmsgClientTokenInfo::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgClientTokenInfo.token)
}
inline void XmsgClientTokenInfo::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgClientTokenInfo.token)
}
inline ::std::string* XmsgClientTokenInfo::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:XmsgClientTokenInfo.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgClientTokenInfo::release_token() {
  // @@protoc_insertion_point(field_release:XmsgClientTokenInfo.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgClientTokenInfo::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:XmsgClientTokenInfo.token)
}

// string alg = 3;
inline void XmsgClientTokenInfo::clear_alg() {
  alg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgClientTokenInfo::alg() const {
  // @@protoc_insertion_point(field_get:XmsgClientTokenInfo.alg)
  return alg_.GetNoArena();
}
inline void XmsgClientTokenInfo::set_alg(const ::std::string& value) {
  
  alg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgClientTokenInfo.alg)
}
#if LANG_CXX11
inline void XmsgClientTokenInfo::set_alg(::std::string&& value) {
  
  alg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgClientTokenInfo.alg)
}
#endif
inline void XmsgClientTokenInfo::set_alg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgClientTokenInfo.alg)
}
inline void XmsgClientTokenInfo::set_alg(const char* value, size_t size) {
  
  alg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgClientTokenInfo.alg)
}
inline ::std::string* XmsgClientTokenInfo::mutable_alg() {
  
  // @@protoc_insertion_point(field_mutable:XmsgClientTokenInfo.alg)
  return alg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgClientTokenInfo::release_alg() {
  // @@protoc_insertion_point(field_release:XmsgClientTokenInfo.alg)
  
  return alg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgClientTokenInfo::set_allocated_alg(::std::string* alg) {
  if (alg != NULL) {
    
  } else {
    
  }
  alg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alg);
  // @@protoc_insertion_point(field_set_allocated:XmsgClientTokenInfo.alg)
}

// string slat = 4;
inline void XmsgClientTokenInfo::clear_slat() {
  slat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgClientTokenInfo::slat() const {
  // @@protoc_insertion_point(field_get:XmsgClientTokenInfo.slat)
  return slat_.GetNoArena();
}
inline void XmsgClientTokenInfo::set_slat(const ::std::string& value) {
  
  slat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgClientTokenInfo.slat)
}
#if LANG_CXX11
inline void XmsgClientTokenInfo::set_slat(::std::string&& value) {
  
  slat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgClientTokenInfo.slat)
}
#endif
inline void XmsgClientTokenInfo::set_slat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  slat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgClientTokenInfo.slat)
}
inline void XmsgClientTokenInfo::set_slat(const char* value, size_t size) {
  
  slat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgClientTokenInfo.slat)
}
inline ::std::string* XmsgClientTokenInfo::mutable_slat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgClientTokenInfo.slat)
  return slat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgClientTokenInfo::release_slat() {
  // @@protoc_insertion_point(field_release:XmsgClientTokenInfo.slat)
  
  return slat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgClientTokenInfo::set_allocated_slat(::std::string* slat) {
  if (slat != NULL) {
    
  } else {
    
  }
  slat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), slat);
  // @@protoc_insertion_point(field_set_allocated:XmsgClientTokenInfo.slat)
}

// string plat = 5;
inline void XmsgClientTokenInfo::clear_plat() {
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgClientTokenInfo::plat() const {
  // @@protoc_insertion_point(field_get:XmsgClientTokenInfo.plat)
  return plat_.GetNoArena();
}
inline void XmsgClientTokenInfo::set_plat(const ::std::string& value) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgClientTokenInfo.plat)
}
#if LANG_CXX11
inline void XmsgClientTokenInfo::set_plat(::std::string&& value) {
  
  plat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgClientTokenInfo.plat)
}
#endif
inline void XmsgClientTokenInfo::set_plat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgClientTokenInfo.plat)
}
inline void XmsgClientTokenInfo::set_plat(const char* value, size_t size) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgClientTokenInfo.plat)
}
inline ::std::string* XmsgClientTokenInfo::mutable_plat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgClientTokenInfo.plat)
  return plat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgClientTokenInfo::release_plat() {
  // @@protoc_insertion_point(field_release:XmsgClientTokenInfo.plat)
  
  return plat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgClientTokenInfo::set_allocated_plat(::std::string* plat) {
  if (plat != NULL) {
    
  } else {
    
  }
  plat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plat);
  // @@protoc_insertion_point(field_set_allocated:XmsgClientTokenInfo.plat)
}

// string did = 6;
inline void XmsgClientTokenInfo::clear_did() {
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgClientTokenInfo::did() const {
  // @@protoc_insertion_point(field_get:XmsgClientTokenInfo.did)
  return did_.GetNoArena();
}
inline void XmsgClientTokenInfo::set_did(const ::std::string& value) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgClientTokenInfo.did)
}
#if LANG_CXX11
inline void XmsgClientTokenInfo::set_did(::std::string&& value) {
  
  did_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgClientTokenInfo.did)
}
#endif
inline void XmsgClientTokenInfo::set_did(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgClientTokenInfo.did)
}
inline void XmsgClientTokenInfo::set_did(const char* value, size_t size) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgClientTokenInfo.did)
}
inline ::std::string* XmsgClientTokenInfo::mutable_did() {
  
  // @@protoc_insertion_point(field_mutable:XmsgClientTokenInfo.did)
  return did_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgClientTokenInfo::release_did() {
  // @@protoc_insertion_point(field_release:XmsgClientTokenInfo.did)
  
  return did_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgClientTokenInfo::set_allocated_did(::std::string* did) {
  if (did != NULL) {
    
  } else {
    
  }
  did_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), did);
  // @@protoc_insertion_point(field_set_allocated:XmsgClientTokenInfo.did)
}

// string sign = 7;
inline void XmsgClientTokenInfo::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgClientTokenInfo::sign() const {
  // @@protoc_insertion_point(field_get:XmsgClientTokenInfo.sign)
  return sign_.GetNoArena();
}
inline void XmsgClientTokenInfo::set_sign(const ::std::string& value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgClientTokenInfo.sign)
}
#if LANG_CXX11
inline void XmsgClientTokenInfo::set_sign(::std::string&& value) {
  
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgClientTokenInfo.sign)
}
#endif
inline void XmsgClientTokenInfo::set_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgClientTokenInfo.sign)
}
inline void XmsgClientTokenInfo::set_sign(const char* value, size_t size) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgClientTokenInfo.sign)
}
inline ::std::string* XmsgClientTokenInfo::mutable_sign() {
  
  // @@protoc_insertion_point(field_mutable:XmsgClientTokenInfo.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgClientTokenInfo::release_sign() {
  // @@protoc_insertion_point(field_release:XmsgClientTokenInfo.sign)
  
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgClientTokenInfo::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    
  } else {
    
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:XmsgClientTokenInfo.sign)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2dx_2dmsg_2doss_2eproto__INCLUDED
