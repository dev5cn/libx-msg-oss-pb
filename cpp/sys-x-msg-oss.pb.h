// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sys-x-msg-oss.proto

#ifndef PROTOBUF_sys_2dx_2dmsg_2doss_2eproto__INCLUDED
#define PROTOBUF_sys_2dx_2dmsg_2doss_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_sys_2dx_2dmsg_2doss_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgOssInfoQueryReq_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgOssInfoQueryReq_ExtEntry_DoNotUse();
void InitDefaultsXmsgOssInfoQueryReqImpl();
void InitDefaultsXmsgOssInfoQueryReq();
void InitDefaultsXmsgOssInfoQueryRspImpl();
void InitDefaultsXmsgOssInfoQueryRsp();
void InitDefaultsXmsgImHlrUsrAuthInfoQueryReqImpl();
void InitDefaultsXmsgImHlrUsrAuthInfoQueryReq();
void InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrUsrAuthInfoQueryRspImpl();
void InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp();
void InitDefaultsXmsgImGroupObjInfoQueryReqImpl();
void InitDefaultsXmsgImGroupObjInfoQueryReq();
void InitDefaultsXmsgImGroupObjInfoQueryRspImpl();
void InitDefaultsXmsgImGroupObjInfoQueryRsp();
void InitDefaultsXmsgImClientDeviceInfo_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImClientDeviceInfo_ExtEntry_DoNotUse();
void InitDefaultsXmsgImClientDeviceInfoImpl();
void InitDefaultsXmsgImClientDeviceInfo();
inline void InitDefaults() {
  InitDefaultsXmsgOssInfoQueryReq_ExtEntry_DoNotUse();
  InitDefaultsXmsgOssInfoQueryReq();
  InitDefaultsXmsgOssInfoQueryRsp();
  InitDefaultsXmsgImHlrUsrAuthInfoQueryReq();
  InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrUsrAuthInfoQueryRsp();
  InitDefaultsXmsgImGroupObjInfoQueryReq();
  InitDefaultsXmsgImGroupObjInfoQueryRsp();
  InitDefaultsXmsgImClientDeviceInfo_ExtEntry_DoNotUse();
  InitDefaultsXmsgImClientDeviceInfo();
}
}  // namespace protobuf_sys_2dx_2dmsg_2doss_2eproto
class XmsgImClientDeviceInfo;
class XmsgImClientDeviceInfoDefaultTypeInternal;
extern XmsgImClientDeviceInfoDefaultTypeInternal _XmsgImClientDeviceInfo_default_instance_;
class XmsgImClientDeviceInfo_ExtEntry_DoNotUse;
class XmsgImClientDeviceInfo_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImClientDeviceInfo_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImClientDeviceInfo_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupObjInfoQueryReq;
class XmsgImGroupObjInfoQueryReqDefaultTypeInternal;
extern XmsgImGroupObjInfoQueryReqDefaultTypeInternal _XmsgImGroupObjInfoQueryReq_default_instance_;
class XmsgImGroupObjInfoQueryRsp;
class XmsgImGroupObjInfoQueryRspDefaultTypeInternal;
extern XmsgImGroupObjInfoQueryRspDefaultTypeInternal _XmsgImGroupObjInfoQueryRsp_default_instance_;
class XmsgImHlrUsrAuthInfoQueryReq;
class XmsgImHlrUsrAuthInfoQueryReqDefaultTypeInternal;
extern XmsgImHlrUsrAuthInfoQueryReqDefaultTypeInternal _XmsgImHlrUsrAuthInfoQueryReq_default_instance_;
class XmsgImHlrUsrAuthInfoQueryRsp;
class XmsgImHlrUsrAuthInfoQueryRspDefaultTypeInternal;
extern XmsgImHlrUsrAuthInfoQueryRspDefaultTypeInternal _XmsgImHlrUsrAuthInfoQueryRsp_default_instance_;
class XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse;
class XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgOssInfoQueryReq;
class XmsgOssInfoQueryReqDefaultTypeInternal;
extern XmsgOssInfoQueryReqDefaultTypeInternal _XmsgOssInfoQueryReq_default_instance_;
class XmsgOssInfoQueryReq_ExtEntry_DoNotUse;
class XmsgOssInfoQueryReq_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgOssInfoQueryReq_ExtEntry_DoNotUseDefaultTypeInternal _XmsgOssInfoQueryReq_ExtEntry_DoNotUse_default_instance_;
class XmsgOssInfoQueryRsp;
class XmsgOssInfoQueryRspDefaultTypeInternal;
extern XmsgOssInfoQueryRspDefaultTypeInternal _XmsgOssInfoQueryRsp_default_instance_;

// ===================================================================

class XmsgOssInfoQueryReq_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgOssInfoQueryReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgOssInfoQueryReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgOssInfoQueryReq_ExtEntry_DoNotUse();
  XmsgOssInfoQueryReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgOssInfoQueryReq_ExtEntry_DoNotUse& other);
  static const XmsgOssInfoQueryReq_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgOssInfoQueryReq_ExtEntry_DoNotUse*>(&_XmsgOssInfoQueryReq_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgOssInfoQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgOssInfoQueryReq) */ {
 public:
  XmsgOssInfoQueryReq();
  virtual ~XmsgOssInfoQueryReq();

  XmsgOssInfoQueryReq(const XmsgOssInfoQueryReq& from);

  inline XmsgOssInfoQueryReq& operator=(const XmsgOssInfoQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgOssInfoQueryReq(XmsgOssInfoQueryReq&& from) noexcept
    : XmsgOssInfoQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgOssInfoQueryReq& operator=(XmsgOssInfoQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgOssInfoQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgOssInfoQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgOssInfoQueryReq*>(
               &_XmsgOssInfoQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(XmsgOssInfoQueryReq* other);
  friend void swap(XmsgOssInfoQueryReq& a, XmsgOssInfoQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgOssInfoQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgOssInfoQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgOssInfoQueryReq& from);
  void MergeFrom(const XmsgOssInfoQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgOssInfoQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 2;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string oid = 1;
  void clear_oid();
  static const int kOidFieldNumber = 1;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  #if LANG_CXX11
  void set_oid(::std::string&& value);
  #endif
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // @@protoc_insertion_point(class_scope:XmsgOssInfoQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgOssInfoQueryReq_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssInfoQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgOssInfoQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgOssInfoQueryRsp) */ {
 public:
  XmsgOssInfoQueryRsp();
  virtual ~XmsgOssInfoQueryRsp();

  XmsgOssInfoQueryRsp(const XmsgOssInfoQueryRsp& from);

  inline XmsgOssInfoQueryRsp& operator=(const XmsgOssInfoQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgOssInfoQueryRsp(XmsgOssInfoQueryRsp&& from) noexcept
    : XmsgOssInfoQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgOssInfoQueryRsp& operator=(XmsgOssInfoQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgOssInfoQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgOssInfoQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgOssInfoQueryRsp*>(
               &_XmsgOssInfoQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(XmsgOssInfoQueryRsp* other);
  friend void swap(XmsgOssInfoQueryRsp& a, XmsgOssInfoQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgOssInfoQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgOssInfoQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgOssInfoQueryRsp& from);
  void MergeFrom(const XmsgOssInfoQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgOssInfoQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string hashVal = 2;
  void clear_hashval();
  static const int kHashValFieldNumber = 2;
  const ::std::string& hashval() const;
  void set_hashval(const ::std::string& value);
  #if LANG_CXX11
  void set_hashval(::std::string&& value);
  #endif
  void set_hashval(const char* value);
  void set_hashval(const char* value, size_t size);
  ::std::string* mutable_hashval();
  ::std::string* release_hashval();
  void set_allocated_hashval(::std::string* hashval);

  // string objName = 3;
  void clear_objname();
  static const int kObjNameFieldNumber = 3;
  const ::std::string& objname() const;
  void set_objname(const ::std::string& value);
  #if LANG_CXX11
  void set_objname(::std::string&& value);
  #endif
  void set_objname(const char* value);
  void set_objname(const char* value, size_t size);
  ::std::string* mutable_objname();
  ::std::string* release_objname();
  void set_allocated_objname(::std::string* objname);

  // string storePath = 4;
  void clear_storepath();
  static const int kStorePathFieldNumber = 4;
  const ::std::string& storepath() const;
  void set_storepath(const ::std::string& value);
  #if LANG_CXX11
  void set_storepath(::std::string&& value);
  #endif
  void set_storepath(const char* value);
  void set_storepath(const char* value, size_t size);
  ::std::string* mutable_storepath();
  ::std::string* release_storepath();
  void set_allocated_storepath(::std::string* storepath);

  // uint64 objSize = 5;
  void clear_objsize();
  static const int kObjSizeFieldNumber = 5;
  ::google::protobuf::uint64 objsize() const;
  void set_objsize(::google::protobuf::uint64 value);

  // uint64 gts = 6;
  void clear_gts();
  static const int kGtsFieldNumber = 6;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgOssInfoQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr hashval_;
  ::google::protobuf::internal::ArenaStringPtr objname_;
  ::google::protobuf::internal::ArenaStringPtr storepath_;
  ::google::protobuf::uint64 objsize_;
  ::google::protobuf::uint64 gts_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgOssInfoQueryRspImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrUsrAuthInfoQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrUsrAuthInfoQueryReq) */ {
 public:
  XmsgImHlrUsrAuthInfoQueryReq();
  virtual ~XmsgImHlrUsrAuthInfoQueryReq();

  XmsgImHlrUsrAuthInfoQueryReq(const XmsgImHlrUsrAuthInfoQueryReq& from);

  inline XmsgImHlrUsrAuthInfoQueryReq& operator=(const XmsgImHlrUsrAuthInfoQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrUsrAuthInfoQueryReq(XmsgImHlrUsrAuthInfoQueryReq&& from) noexcept
    : XmsgImHlrUsrAuthInfoQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrUsrAuthInfoQueryReq& operator=(XmsgImHlrUsrAuthInfoQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrUsrAuthInfoQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrUsrAuthInfoQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrUsrAuthInfoQueryReq*>(
               &_XmsgImHlrUsrAuthInfoQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(XmsgImHlrUsrAuthInfoQueryReq* other);
  friend void swap(XmsgImHlrUsrAuthInfoQueryReq& a, XmsgImHlrUsrAuthInfoQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrUsrAuthInfoQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrUsrAuthInfoQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrUsrAuthInfoQueryReq& from);
  void MergeFrom(const XmsgImHlrUsrAuthInfoQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrUsrAuthInfoQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string cgt = 2;
  void clear_cgt();
  static const int kCgtFieldNumber = 2;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // @@protoc_insertion_point(class_scope:XmsgImHlrUsrAuthInfoQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImHlrUsrAuthInfoQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse();
  XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse& other);
  static const XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse*>(&_XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrUsrAuthInfoQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrUsrAuthInfoQueryRsp) */ {
 public:
  XmsgImHlrUsrAuthInfoQueryRsp();
  virtual ~XmsgImHlrUsrAuthInfoQueryRsp();

  XmsgImHlrUsrAuthInfoQueryRsp(const XmsgImHlrUsrAuthInfoQueryRsp& from);

  inline XmsgImHlrUsrAuthInfoQueryRsp& operator=(const XmsgImHlrUsrAuthInfoQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrUsrAuthInfoQueryRsp(XmsgImHlrUsrAuthInfoQueryRsp&& from) noexcept
    : XmsgImHlrUsrAuthInfoQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrUsrAuthInfoQueryRsp& operator=(XmsgImHlrUsrAuthInfoQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrUsrAuthInfoQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrUsrAuthInfoQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrUsrAuthInfoQueryRsp*>(
               &_XmsgImHlrUsrAuthInfoQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(XmsgImHlrUsrAuthInfoQueryRsp* other);
  friend void swap(XmsgImHlrUsrAuthInfoQueryRsp& a, XmsgImHlrUsrAuthInfoQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrUsrAuthInfoQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrUsrAuthInfoQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrUsrAuthInfoQueryRsp& from);
  void MergeFrom(const XmsgImHlrUsrAuthInfoQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrUsrAuthInfoQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 5;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string secret = 1;
  void clear_secret();
  static const int kSecretFieldNumber = 1;
  const ::std::string& secret() const;
  void set_secret(const ::std::string& value);
  #if LANG_CXX11
  void set_secret(::std::string&& value);
  #endif
  void set_secret(const char* value);
  void set_secret(const char* value, size_t size);
  ::std::string* mutable_secret();
  ::std::string* release_secret();
  void set_allocated_secret(::std::string* secret);

  // .XmsgImClientDeviceInfo info = 4;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 4;
  const ::XmsgImClientDeviceInfo& info() const;
  ::XmsgImClientDeviceInfo* release_info();
  ::XmsgImClientDeviceInfo* mutable_info();
  void set_allocated_info(::XmsgImClientDeviceInfo* info);

  // uint64 gts = 2;
  void clear_gts();
  static const int kGtsFieldNumber = 2;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // uint64 expired = 3;
  void clear_expired();
  static const int kExpiredFieldNumber = 3;
  ::google::protobuf::uint64 expired() const;
  void set_expired(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImHlrUsrAuthInfoQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrUsrAuthInfoQueryRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr secret_;
  ::XmsgImClientDeviceInfo* info_;
  ::google::protobuf::uint64 gts_;
  ::google::protobuf::uint64 expired_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImHlrUsrAuthInfoQueryRspImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupObjInfoQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupObjInfoQueryReq) */ {
 public:
  XmsgImGroupObjInfoQueryReq();
  virtual ~XmsgImGroupObjInfoQueryReq();

  XmsgImGroupObjInfoQueryReq(const XmsgImGroupObjInfoQueryReq& from);

  inline XmsgImGroupObjInfoQueryReq& operator=(const XmsgImGroupObjInfoQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupObjInfoQueryReq(XmsgImGroupObjInfoQueryReq&& from) noexcept
    : XmsgImGroupObjInfoQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupObjInfoQueryReq& operator=(XmsgImGroupObjInfoQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupObjInfoQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupObjInfoQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupObjInfoQueryReq*>(
               &_XmsgImGroupObjInfoQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(XmsgImGroupObjInfoQueryReq* other);
  friend void swap(XmsgImGroupObjInfoQueryReq& a, XmsgImGroupObjInfoQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupObjInfoQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupObjInfoQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupObjInfoQueryReq& from);
  void MergeFrom(const XmsgImGroupObjInfoQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupObjInfoQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ucgt = 1;
  void clear_ucgt();
  static const int kUcgtFieldNumber = 1;
  const ::std::string& ucgt() const;
  void set_ucgt(const ::std::string& value);
  #if LANG_CXX11
  void set_ucgt(::std::string&& value);
  #endif
  void set_ucgt(const char* value);
  void set_ucgt(const char* value, size_t size);
  ::std::string* mutable_ucgt();
  ::std::string* release_ucgt();
  void set_allocated_ucgt(::std::string* ucgt);

  // string gcgt = 2;
  void clear_gcgt();
  static const int kGcgtFieldNumber = 2;
  const ::std::string& gcgt() const;
  void set_gcgt(const ::std::string& value);
  #if LANG_CXX11
  void set_gcgt(::std::string&& value);
  #endif
  void set_gcgt(const char* value);
  void set_gcgt(const char* value, size_t size);
  ::std::string* mutable_gcgt();
  ::std::string* release_gcgt();
  void set_allocated_gcgt(::std::string* gcgt);

  // string oid = 3;
  void clear_oid();
  static const int kOidFieldNumber = 3;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  #if LANG_CXX11
  void set_oid(::std::string&& value);
  #endif
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // @@protoc_insertion_point(class_scope:XmsgImGroupObjInfoQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ucgt_;
  ::google::protobuf::internal::ArenaStringPtr gcgt_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImGroupObjInfoQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupObjInfoQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupObjInfoQueryRsp) */ {
 public:
  XmsgImGroupObjInfoQueryRsp();
  virtual ~XmsgImGroupObjInfoQueryRsp();

  XmsgImGroupObjInfoQueryRsp(const XmsgImGroupObjInfoQueryRsp& from);

  inline XmsgImGroupObjInfoQueryRsp& operator=(const XmsgImGroupObjInfoQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupObjInfoQueryRsp(XmsgImGroupObjInfoQueryRsp&& from) noexcept
    : XmsgImGroupObjInfoQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupObjInfoQueryRsp& operator=(XmsgImGroupObjInfoQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupObjInfoQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupObjInfoQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupObjInfoQueryRsp*>(
               &_XmsgImGroupObjInfoQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(XmsgImGroupObjInfoQueryRsp* other);
  friend void swap(XmsgImGroupObjInfoQueryRsp& a, XmsgImGroupObjInfoQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupObjInfoQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupObjInfoQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupObjInfoQueryRsp& from);
  void MergeFrom(const XmsgImGroupObjInfoQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupObjInfoQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ucgt = 1;
  void clear_ucgt();
  static const int kUcgtFieldNumber = 1;
  const ::std::string& ucgt() const;
  void set_ucgt(const ::std::string& value);
  #if LANG_CXX11
  void set_ucgt(::std::string&& value);
  #endif
  void set_ucgt(const char* value);
  void set_ucgt(const char* value, size_t size);
  ::std::string* mutable_ucgt();
  ::std::string* release_ucgt();
  void set_allocated_ucgt(::std::string* ucgt);

  // uint64 gts = 2;
  void clear_gts();
  static const int kGtsFieldNumber = 2;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImGroupObjInfoQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ucgt_;
  ::google::protobuf::uint64 gts_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImGroupObjInfoQueryRspImpl();
};
// -------------------------------------------------------------------

class XmsgImClientDeviceInfo_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImClientDeviceInfo_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImClientDeviceInfo_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImClientDeviceInfo_ExtEntry_DoNotUse();
  XmsgImClientDeviceInfo_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImClientDeviceInfo_ExtEntry_DoNotUse& other);
  static const XmsgImClientDeviceInfo_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImClientDeviceInfo_ExtEntry_DoNotUse*>(&_XmsgImClientDeviceInfo_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImClientDeviceInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImClientDeviceInfo) */ {
 public:
  XmsgImClientDeviceInfo();
  virtual ~XmsgImClientDeviceInfo();

  XmsgImClientDeviceInfo(const XmsgImClientDeviceInfo& from);

  inline XmsgImClientDeviceInfo& operator=(const XmsgImClientDeviceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImClientDeviceInfo(XmsgImClientDeviceInfo&& from) noexcept
    : XmsgImClientDeviceInfo() {
    *this = ::std::move(from);
  }

  inline XmsgImClientDeviceInfo& operator=(XmsgImClientDeviceInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImClientDeviceInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImClientDeviceInfo* internal_default_instance() {
    return reinterpret_cast<const XmsgImClientDeviceInfo*>(
               &_XmsgImClientDeviceInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(XmsgImClientDeviceInfo* other);
  friend void swap(XmsgImClientDeviceInfo& a, XmsgImClientDeviceInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImClientDeviceInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImClientDeviceInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImClientDeviceInfo& from);
  void MergeFrom(const XmsgImClientDeviceInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImClientDeviceInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 4;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string plat = 1;
  void clear_plat();
  static const int kPlatFieldNumber = 1;
  const ::std::string& plat() const;
  void set_plat(const ::std::string& value);
  #if LANG_CXX11
  void set_plat(::std::string&& value);
  #endif
  void set_plat(const char* value);
  void set_plat(const char* value, size_t size);
  ::std::string* mutable_plat();
  ::std::string* release_plat();
  void set_allocated_plat(::std::string* plat);

  // string did = 2;
  void clear_did();
  static const int kDidFieldNumber = 2;
  const ::std::string& did() const;
  void set_did(const ::std::string& value);
  #if LANG_CXX11
  void set_did(::std::string&& value);
  #endif
  void set_did(const char* value);
  void set_did(const char* value, size_t size);
  ::std::string* mutable_did();
  ::std::string* release_did();
  void set_allocated_did(::std::string* did);

  // string ver = 3;
  void clear_ver();
  static const int kVerFieldNumber = 3;
  const ::std::string& ver() const;
  void set_ver(const ::std::string& value);
  #if LANG_CXX11
  void set_ver(::std::string&& value);
  #endif
  void set_ver(const char* value);
  void set_ver(const char* value, size_t size);
  ::std::string* mutable_ver();
  ::std::string* release_ver();
  void set_allocated_ver(::std::string* ver);

  // @@protoc_insertion_point(class_scope:XmsgImClientDeviceInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImClientDeviceInfo_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr plat_;
  ::google::protobuf::internal::ArenaStringPtr did_;
  ::google::protobuf::internal::ArenaStringPtr ver_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2doss_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2doss_2eproto::InitDefaultsXmsgImClientDeviceInfoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// XmsgOssInfoQueryReq

// string oid = 1;
inline void XmsgOssInfoQueryReq::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssInfoQueryReq::oid() const {
  // @@protoc_insertion_point(field_get:XmsgOssInfoQueryReq.oid)
  return oid_.GetNoArena();
}
inline void XmsgOssInfoQueryReq::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssInfoQueryReq.oid)
}
#if LANG_CXX11
inline void XmsgOssInfoQueryReq::set_oid(::std::string&& value) {
  
  oid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssInfoQueryReq.oid)
}
#endif
inline void XmsgOssInfoQueryReq::set_oid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssInfoQueryReq.oid)
}
inline void XmsgOssInfoQueryReq::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssInfoQueryReq.oid)
}
inline ::std::string* XmsgOssInfoQueryReq::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssInfoQueryReq.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssInfoQueryReq::release_oid() {
  // @@protoc_insertion_point(field_release:XmsgOssInfoQueryReq.oid)
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssInfoQueryReq::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssInfoQueryReq.oid)
}

// map<string, string> ext = 2;
inline int XmsgOssInfoQueryReq::ext_size() const {
  return ext_.size();
}
inline void XmsgOssInfoQueryReq::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgOssInfoQueryReq::ext() const {
  // @@protoc_insertion_point(field_map:XmsgOssInfoQueryReq.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgOssInfoQueryReq::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgOssInfoQueryReq.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgOssInfoQueryRsp

// string cgt = 1;
inline void XmsgOssInfoQueryRsp::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssInfoQueryRsp::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgOssInfoQueryRsp.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgOssInfoQueryRsp::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssInfoQueryRsp.cgt)
}
#if LANG_CXX11
inline void XmsgOssInfoQueryRsp::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssInfoQueryRsp.cgt)
}
#endif
inline void XmsgOssInfoQueryRsp::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssInfoQueryRsp.cgt)
}
inline void XmsgOssInfoQueryRsp::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssInfoQueryRsp.cgt)
}
inline ::std::string* XmsgOssInfoQueryRsp::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssInfoQueryRsp.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssInfoQueryRsp::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgOssInfoQueryRsp.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssInfoQueryRsp::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssInfoQueryRsp.cgt)
}

// string hashVal = 2;
inline void XmsgOssInfoQueryRsp::clear_hashval() {
  hashval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssInfoQueryRsp::hashval() const {
  // @@protoc_insertion_point(field_get:XmsgOssInfoQueryRsp.hashVal)
  return hashval_.GetNoArena();
}
inline void XmsgOssInfoQueryRsp::set_hashval(const ::std::string& value) {
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssInfoQueryRsp.hashVal)
}
#if LANG_CXX11
inline void XmsgOssInfoQueryRsp::set_hashval(::std::string&& value) {
  
  hashval_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssInfoQueryRsp.hashVal)
}
#endif
inline void XmsgOssInfoQueryRsp::set_hashval(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssInfoQueryRsp.hashVal)
}
inline void XmsgOssInfoQueryRsp::set_hashval(const char* value, size_t size) {
  
  hashval_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssInfoQueryRsp.hashVal)
}
inline ::std::string* XmsgOssInfoQueryRsp::mutable_hashval() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssInfoQueryRsp.hashVal)
  return hashval_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssInfoQueryRsp::release_hashval() {
  // @@protoc_insertion_point(field_release:XmsgOssInfoQueryRsp.hashVal)
  
  return hashval_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssInfoQueryRsp::set_allocated_hashval(::std::string* hashval) {
  if (hashval != NULL) {
    
  } else {
    
  }
  hashval_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashval);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssInfoQueryRsp.hashVal)
}

// string objName = 3;
inline void XmsgOssInfoQueryRsp::clear_objname() {
  objname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssInfoQueryRsp::objname() const {
  // @@protoc_insertion_point(field_get:XmsgOssInfoQueryRsp.objName)
  return objname_.GetNoArena();
}
inline void XmsgOssInfoQueryRsp::set_objname(const ::std::string& value) {
  
  objname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssInfoQueryRsp.objName)
}
#if LANG_CXX11
inline void XmsgOssInfoQueryRsp::set_objname(::std::string&& value) {
  
  objname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssInfoQueryRsp.objName)
}
#endif
inline void XmsgOssInfoQueryRsp::set_objname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  objname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssInfoQueryRsp.objName)
}
inline void XmsgOssInfoQueryRsp::set_objname(const char* value, size_t size) {
  
  objname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssInfoQueryRsp.objName)
}
inline ::std::string* XmsgOssInfoQueryRsp::mutable_objname() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssInfoQueryRsp.objName)
  return objname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssInfoQueryRsp::release_objname() {
  // @@protoc_insertion_point(field_release:XmsgOssInfoQueryRsp.objName)
  
  return objname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssInfoQueryRsp::set_allocated_objname(::std::string* objname) {
  if (objname != NULL) {
    
  } else {
    
  }
  objname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), objname);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssInfoQueryRsp.objName)
}

// string storePath = 4;
inline void XmsgOssInfoQueryRsp::clear_storepath() {
  storepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgOssInfoQueryRsp::storepath() const {
  // @@protoc_insertion_point(field_get:XmsgOssInfoQueryRsp.storePath)
  return storepath_.GetNoArena();
}
inline void XmsgOssInfoQueryRsp::set_storepath(const ::std::string& value) {
  
  storepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgOssInfoQueryRsp.storePath)
}
#if LANG_CXX11
inline void XmsgOssInfoQueryRsp::set_storepath(::std::string&& value) {
  
  storepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgOssInfoQueryRsp.storePath)
}
#endif
inline void XmsgOssInfoQueryRsp::set_storepath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  storepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgOssInfoQueryRsp.storePath)
}
inline void XmsgOssInfoQueryRsp::set_storepath(const char* value, size_t size) {
  
  storepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgOssInfoQueryRsp.storePath)
}
inline ::std::string* XmsgOssInfoQueryRsp::mutable_storepath() {
  
  // @@protoc_insertion_point(field_mutable:XmsgOssInfoQueryRsp.storePath)
  return storepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgOssInfoQueryRsp::release_storepath() {
  // @@protoc_insertion_point(field_release:XmsgOssInfoQueryRsp.storePath)
  
  return storepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgOssInfoQueryRsp::set_allocated_storepath(::std::string* storepath) {
  if (storepath != NULL) {
    
  } else {
    
  }
  storepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storepath);
  // @@protoc_insertion_point(field_set_allocated:XmsgOssInfoQueryRsp.storePath)
}

// uint64 objSize = 5;
inline void XmsgOssInfoQueryRsp::clear_objsize() {
  objsize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgOssInfoQueryRsp::objsize() const {
  // @@protoc_insertion_point(field_get:XmsgOssInfoQueryRsp.objSize)
  return objsize_;
}
inline void XmsgOssInfoQueryRsp::set_objsize(::google::protobuf::uint64 value) {
  
  objsize_ = value;
  // @@protoc_insertion_point(field_set:XmsgOssInfoQueryRsp.objSize)
}

// uint64 gts = 6;
inline void XmsgOssInfoQueryRsp::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgOssInfoQueryRsp::gts() const {
  // @@protoc_insertion_point(field_get:XmsgOssInfoQueryRsp.gts)
  return gts_;
}
inline void XmsgOssInfoQueryRsp::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgOssInfoQueryRsp.gts)
}

// -------------------------------------------------------------------

// XmsgImHlrUsrAuthInfoQueryReq

// string token = 1;
inline void XmsgImHlrUsrAuthInfoQueryReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrUsrAuthInfoQueryReq::token() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrAuthInfoQueryReq.token)
  return token_.GetNoArena();
}
inline void XmsgImHlrUsrAuthInfoQueryReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrUsrAuthInfoQueryReq.token)
}
#if LANG_CXX11
inline void XmsgImHlrUsrAuthInfoQueryReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrUsrAuthInfoQueryReq.token)
}
#endif
inline void XmsgImHlrUsrAuthInfoQueryReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrUsrAuthInfoQueryReq.token)
}
inline void XmsgImHlrUsrAuthInfoQueryReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrUsrAuthInfoQueryReq.token)
}
inline ::std::string* XmsgImHlrUsrAuthInfoQueryReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrUsrAuthInfoQueryReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrUsrAuthInfoQueryReq::release_token() {
  // @@protoc_insertion_point(field_release:XmsgImHlrUsrAuthInfoQueryReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrUsrAuthInfoQueryReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrUsrAuthInfoQueryReq.token)
}

// string cgt = 2;
inline void XmsgImHlrUsrAuthInfoQueryReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrUsrAuthInfoQueryReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrAuthInfoQueryReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImHlrUsrAuthInfoQueryReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrUsrAuthInfoQueryReq.cgt)
}
#if LANG_CXX11
inline void XmsgImHlrUsrAuthInfoQueryReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrUsrAuthInfoQueryReq.cgt)
}
#endif
inline void XmsgImHlrUsrAuthInfoQueryReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrUsrAuthInfoQueryReq.cgt)
}
inline void XmsgImHlrUsrAuthInfoQueryReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrUsrAuthInfoQueryReq.cgt)
}
inline ::std::string* XmsgImHlrUsrAuthInfoQueryReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrUsrAuthInfoQueryReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrUsrAuthInfoQueryReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImHlrUsrAuthInfoQueryReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrUsrAuthInfoQueryReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrUsrAuthInfoQueryReq.cgt)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrUsrAuthInfoQueryRsp

// string secret = 1;
inline void XmsgImHlrUsrAuthInfoQueryRsp::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrUsrAuthInfoQueryRsp::secret() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrAuthInfoQueryRsp.secret)
  return secret_.GetNoArena();
}
inline void XmsgImHlrUsrAuthInfoQueryRsp::set_secret(const ::std::string& value) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrUsrAuthInfoQueryRsp.secret)
}
#if LANG_CXX11
inline void XmsgImHlrUsrAuthInfoQueryRsp::set_secret(::std::string&& value) {
  
  secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrUsrAuthInfoQueryRsp.secret)
}
#endif
inline void XmsgImHlrUsrAuthInfoQueryRsp::set_secret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrUsrAuthInfoQueryRsp.secret)
}
inline void XmsgImHlrUsrAuthInfoQueryRsp::set_secret(const char* value, size_t size) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrUsrAuthInfoQueryRsp.secret)
}
inline ::std::string* XmsgImHlrUsrAuthInfoQueryRsp::mutable_secret() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrUsrAuthInfoQueryRsp.secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrUsrAuthInfoQueryRsp::release_secret() {
  // @@protoc_insertion_point(field_release:XmsgImHlrUsrAuthInfoQueryRsp.secret)
  
  return secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrUsrAuthInfoQueryRsp::set_allocated_secret(::std::string* secret) {
  if (secret != NULL) {
    
  } else {
    
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrUsrAuthInfoQueryRsp.secret)
}

// uint64 gts = 2;
inline void XmsgImHlrUsrAuthInfoQueryRsp::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrUsrAuthInfoQueryRsp::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrAuthInfoQueryRsp.gts)
  return gts_;
}
inline void XmsgImHlrUsrAuthInfoQueryRsp::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrUsrAuthInfoQueryRsp.gts)
}

// uint64 expired = 3;
inline void XmsgImHlrUsrAuthInfoQueryRsp::clear_expired() {
  expired_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImHlrUsrAuthInfoQueryRsp::expired() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrAuthInfoQueryRsp.expired)
  return expired_;
}
inline void XmsgImHlrUsrAuthInfoQueryRsp::set_expired(::google::protobuf::uint64 value) {
  
  expired_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHlrUsrAuthInfoQueryRsp.expired)
}

// .XmsgImClientDeviceInfo info = 4;
inline bool XmsgImHlrUsrAuthInfoQueryRsp::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void XmsgImHlrUsrAuthInfoQueryRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
inline const ::XmsgImClientDeviceInfo& XmsgImHlrUsrAuthInfoQueryRsp::info() const {
  const ::XmsgImClientDeviceInfo* p = info_;
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrAuthInfoQueryRsp.info)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImClientDeviceInfo*>(
      &::_XmsgImClientDeviceInfo_default_instance_);
}
inline ::XmsgImClientDeviceInfo* XmsgImHlrUsrAuthInfoQueryRsp::release_info() {
  // @@protoc_insertion_point(field_release:XmsgImHlrUsrAuthInfoQueryRsp.info)
  
  ::XmsgImClientDeviceInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::XmsgImClientDeviceInfo* XmsgImHlrUsrAuthInfoQueryRsp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::XmsgImClientDeviceInfo;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImHlrUsrAuthInfoQueryRsp.info)
  return info_;
}
inline void XmsgImHlrUsrAuthInfoQueryRsp::set_allocated_info(::XmsgImClientDeviceInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrUsrAuthInfoQueryRsp.info)
}

// map<string, string> ext = 5;
inline int XmsgImHlrUsrAuthInfoQueryRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrUsrAuthInfoQueryRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrUsrAuthInfoQueryRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrUsrAuthInfoQueryRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrUsrAuthInfoQueryRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrUsrAuthInfoQueryRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImGroupObjInfoQueryReq

// string ucgt = 1;
inline void XmsgImGroupObjInfoQueryReq::clear_ucgt() {
  ucgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupObjInfoQueryReq::ucgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupObjInfoQueryReq.ucgt)
  return ucgt_.GetNoArena();
}
inline void XmsgImGroupObjInfoQueryReq::set_ucgt(const ::std::string& value) {
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupObjInfoQueryReq.ucgt)
}
#if LANG_CXX11
inline void XmsgImGroupObjInfoQueryReq::set_ucgt(::std::string&& value) {
  
  ucgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupObjInfoQueryReq.ucgt)
}
#endif
inline void XmsgImGroupObjInfoQueryReq::set_ucgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupObjInfoQueryReq.ucgt)
}
inline void XmsgImGroupObjInfoQueryReq::set_ucgt(const char* value, size_t size) {
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupObjInfoQueryReq.ucgt)
}
inline ::std::string* XmsgImGroupObjInfoQueryReq::mutable_ucgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupObjInfoQueryReq.ucgt)
  return ucgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupObjInfoQueryReq::release_ucgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupObjInfoQueryReq.ucgt)
  
  return ucgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupObjInfoQueryReq::set_allocated_ucgt(::std::string* ucgt) {
  if (ucgt != NULL) {
    
  } else {
    
  }
  ucgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ucgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupObjInfoQueryReq.ucgt)
}

// string gcgt = 2;
inline void XmsgImGroupObjInfoQueryReq::clear_gcgt() {
  gcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupObjInfoQueryReq::gcgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupObjInfoQueryReq.gcgt)
  return gcgt_.GetNoArena();
}
inline void XmsgImGroupObjInfoQueryReq::set_gcgt(const ::std::string& value) {
  
  gcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupObjInfoQueryReq.gcgt)
}
#if LANG_CXX11
inline void XmsgImGroupObjInfoQueryReq::set_gcgt(::std::string&& value) {
  
  gcgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupObjInfoQueryReq.gcgt)
}
#endif
inline void XmsgImGroupObjInfoQueryReq::set_gcgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupObjInfoQueryReq.gcgt)
}
inline void XmsgImGroupObjInfoQueryReq::set_gcgt(const char* value, size_t size) {
  
  gcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupObjInfoQueryReq.gcgt)
}
inline ::std::string* XmsgImGroupObjInfoQueryReq::mutable_gcgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupObjInfoQueryReq.gcgt)
  return gcgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupObjInfoQueryReq::release_gcgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupObjInfoQueryReq.gcgt)
  
  return gcgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupObjInfoQueryReq::set_allocated_gcgt(::std::string* gcgt) {
  if (gcgt != NULL) {
    
  } else {
    
  }
  gcgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gcgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupObjInfoQueryReq.gcgt)
}

// string oid = 3;
inline void XmsgImGroupObjInfoQueryReq::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupObjInfoQueryReq::oid() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupObjInfoQueryReq.oid)
  return oid_.GetNoArena();
}
inline void XmsgImGroupObjInfoQueryReq::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupObjInfoQueryReq.oid)
}
#if LANG_CXX11
inline void XmsgImGroupObjInfoQueryReq::set_oid(::std::string&& value) {
  
  oid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupObjInfoQueryReq.oid)
}
#endif
inline void XmsgImGroupObjInfoQueryReq::set_oid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupObjInfoQueryReq.oid)
}
inline void XmsgImGroupObjInfoQueryReq::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupObjInfoQueryReq.oid)
}
inline ::std::string* XmsgImGroupObjInfoQueryReq::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupObjInfoQueryReq.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupObjInfoQueryReq::release_oid() {
  // @@protoc_insertion_point(field_release:XmsgImGroupObjInfoQueryReq.oid)
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupObjInfoQueryReq::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupObjInfoQueryReq.oid)
}

// -------------------------------------------------------------------

// XmsgImGroupObjInfoQueryRsp

// string ucgt = 1;
inline void XmsgImGroupObjInfoQueryRsp::clear_ucgt() {
  ucgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupObjInfoQueryRsp::ucgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupObjInfoQueryRsp.ucgt)
  return ucgt_.GetNoArena();
}
inline void XmsgImGroupObjInfoQueryRsp::set_ucgt(const ::std::string& value) {
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupObjInfoQueryRsp.ucgt)
}
#if LANG_CXX11
inline void XmsgImGroupObjInfoQueryRsp::set_ucgt(::std::string&& value) {
  
  ucgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupObjInfoQueryRsp.ucgt)
}
#endif
inline void XmsgImGroupObjInfoQueryRsp::set_ucgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupObjInfoQueryRsp.ucgt)
}
inline void XmsgImGroupObjInfoQueryRsp::set_ucgt(const char* value, size_t size) {
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupObjInfoQueryRsp.ucgt)
}
inline ::std::string* XmsgImGroupObjInfoQueryRsp::mutable_ucgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupObjInfoQueryRsp.ucgt)
  return ucgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupObjInfoQueryRsp::release_ucgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupObjInfoQueryRsp.ucgt)
  
  return ucgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupObjInfoQueryRsp::set_allocated_ucgt(::std::string* ucgt) {
  if (ucgt != NULL) {
    
  } else {
    
  }
  ucgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ucgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupObjInfoQueryRsp.ucgt)
}

// uint64 gts = 2;
inline void XmsgImGroupObjInfoQueryRsp::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupObjInfoQueryRsp::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupObjInfoQueryRsp.gts)
  return gts_;
}
inline void XmsgImGroupObjInfoQueryRsp::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupObjInfoQueryRsp.gts)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImClientDeviceInfo

// string plat = 1;
inline void XmsgImClientDeviceInfo::clear_plat() {
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImClientDeviceInfo::plat() const {
  // @@protoc_insertion_point(field_get:XmsgImClientDeviceInfo.plat)
  return plat_.GetNoArena();
}
inline void XmsgImClientDeviceInfo::set_plat(const ::std::string& value) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImClientDeviceInfo.plat)
}
#if LANG_CXX11
inline void XmsgImClientDeviceInfo::set_plat(::std::string&& value) {
  
  plat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImClientDeviceInfo.plat)
}
#endif
inline void XmsgImClientDeviceInfo::set_plat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImClientDeviceInfo.plat)
}
inline void XmsgImClientDeviceInfo::set_plat(const char* value, size_t size) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImClientDeviceInfo.plat)
}
inline ::std::string* XmsgImClientDeviceInfo::mutable_plat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImClientDeviceInfo.plat)
  return plat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImClientDeviceInfo::release_plat() {
  // @@protoc_insertion_point(field_release:XmsgImClientDeviceInfo.plat)
  
  return plat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImClientDeviceInfo::set_allocated_plat(::std::string* plat) {
  if (plat != NULL) {
    
  } else {
    
  }
  plat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plat);
  // @@protoc_insertion_point(field_set_allocated:XmsgImClientDeviceInfo.plat)
}

// string did = 2;
inline void XmsgImClientDeviceInfo::clear_did() {
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImClientDeviceInfo::did() const {
  // @@protoc_insertion_point(field_get:XmsgImClientDeviceInfo.did)
  return did_.GetNoArena();
}
inline void XmsgImClientDeviceInfo::set_did(const ::std::string& value) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImClientDeviceInfo.did)
}
#if LANG_CXX11
inline void XmsgImClientDeviceInfo::set_did(::std::string&& value) {
  
  did_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImClientDeviceInfo.did)
}
#endif
inline void XmsgImClientDeviceInfo::set_did(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImClientDeviceInfo.did)
}
inline void XmsgImClientDeviceInfo::set_did(const char* value, size_t size) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImClientDeviceInfo.did)
}
inline ::std::string* XmsgImClientDeviceInfo::mutable_did() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImClientDeviceInfo.did)
  return did_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImClientDeviceInfo::release_did() {
  // @@protoc_insertion_point(field_release:XmsgImClientDeviceInfo.did)
  
  return did_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImClientDeviceInfo::set_allocated_did(::std::string* did) {
  if (did != NULL) {
    
  } else {
    
  }
  did_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), did);
  // @@protoc_insertion_point(field_set_allocated:XmsgImClientDeviceInfo.did)
}

// string ver = 3;
inline void XmsgImClientDeviceInfo::clear_ver() {
  ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImClientDeviceInfo::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImClientDeviceInfo.ver)
  return ver_.GetNoArena();
}
inline void XmsgImClientDeviceInfo::set_ver(const ::std::string& value) {
  
  ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImClientDeviceInfo.ver)
}
#if LANG_CXX11
inline void XmsgImClientDeviceInfo::set_ver(::std::string&& value) {
  
  ver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImClientDeviceInfo.ver)
}
#endif
inline void XmsgImClientDeviceInfo::set_ver(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImClientDeviceInfo.ver)
}
inline void XmsgImClientDeviceInfo::set_ver(const char* value, size_t size) {
  
  ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImClientDeviceInfo.ver)
}
inline ::std::string* XmsgImClientDeviceInfo::mutable_ver() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImClientDeviceInfo.ver)
  return ver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImClientDeviceInfo::release_ver() {
  // @@protoc_insertion_point(field_release:XmsgImClientDeviceInfo.ver)
  
  return ver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImClientDeviceInfo::set_allocated_ver(::std::string* ver) {
  if (ver != NULL) {
    
  } else {
    
  }
  ver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ver);
  // @@protoc_insertion_point(field_set_allocated:XmsgImClientDeviceInfo.ver)
}

// map<string, string> ext = 4;
inline int XmsgImClientDeviceInfo::ext_size() const {
  return ext_.size();
}
inline void XmsgImClientDeviceInfo::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImClientDeviceInfo::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImClientDeviceInfo.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImClientDeviceInfo::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImClientDeviceInfo.ext)
  return ext_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sys_2dx_2dmsg_2doss_2eproto__INCLUDED
